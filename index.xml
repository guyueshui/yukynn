<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yukynnの窝</title>
    <link>https://guyueshui.github.io/yukynn/</link>
    <description>Recent content on Yukynnの窝</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 12 Mar 2020 18:15:17 +0800</lastBuildDate>
    
        <atom:link href="https://guyueshui.github.io/yukynn/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>About</title>
        <link>https://guyueshui.github.io/yukynn/about/</link>
        <pubDate>Thu, 12 Mar 2020 18:15:17 +0800</pubDate>
        
        <guid>https://guyueshui.github.io/yukynn/about/</guid>
        <description>Yukynnの窝 https://guyueshui.github.io/yukynn/about/ -&lt;p&gt;Hi, this is Yukynn, working as a 3D-designer. Hope you like this site.&lt;/p&gt;
- https://guyueshui.github.io/yukynn/about/ - </description>
        </item>
    
    
    
        <item>
        <title>测试</title>
        <link>https://guyueshui.github.io/yukynn/posts/second/</link>
        <pubDate>Wed, 11 Mar 2020 21:41:15 +0800</pubDate>
        
        <guid>https://guyueshui.github.io/yukynn/posts/second/</guid>
        <description>Yukynnの窝 https://guyueshui.github.io/yukynn/posts/second/ -&lt;p&gt;可以在这里添加描述。&lt;/p&gt;
&lt;p&gt;The remaining content of your post.&lt;/p&gt;- https://guyueshui.github.io/yukynn/posts/second/ - </description>
        </item>
    
    
    
        <item>
        <title>Hello World</title>
        <link>https://guyueshui.github.io/yukynn/posts/hello-world/</link>
        <pubDate>Wed, 11 Mar 2020 20:50:39 +0800</pubDate>
        
        <guid>https://guyueshui.github.io/yukynn/posts/hello-world/</guid>
        <description>Yukynnの窝 https://guyueshui.github.io/yukynn/posts/hello-world/ -&lt;p&gt;这种有头图。&lt;/p&gt;
&lt;p&gt;The remaining content of your post. Let&amp;rsquo;s see math type: $e=mc^2$.&lt;/p&gt;
&lt;p&gt;This is yukynn&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, who loves yychi&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;!&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;The english name of 玉静。 &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;The english name of 氷。 &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;- https://guyueshui.github.io/yukynn/posts/hello-world/ - </description>
        </item>
    
    
    
        <item>
        <title>Brief Introduction to Shell Script</title>
        <link>https://guyueshui.github.io/yukynn/posts/shell-intro/</link>
        <pubDate>Fri, 22 Nov 2019 16:59:46 +0800</pubDate>
        
        <guid>https://guyueshui.github.io/yukynn/posts/shell-intro/</guid>
        <description>Yukynnの窝 https://guyueshui.github.io/yukynn/posts/shell-intro/ -&lt;p&gt;This article is mainly refered to &amp;ldquo;The Linux Command Line&amp;rdquo;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. I just take
some most important things out of the book.&lt;/p&gt;
&lt;h2 id=&#34;expansion&#34;&gt;Expansion&lt;/h2&gt;
&lt;p&gt;Each time you type a command line and press the &lt;!-- raw HTML omitted --&gt;Enter&lt;!-- raw HTML omitted --&gt; key, bash
performs several processes upon the text before it carries out your command.
Just look an example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo *
Desktop Documents ls-output.txt Music Pictures Public Templates Videos
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Why not display an asterisk? That&amp;rsquo;s &lt;strong&gt;expansion&lt;/strong&gt;! &lt;code&gt;*&lt;/code&gt; &lt;em&gt;expands&lt;/em&gt; to all files in
current directory.&lt;/p&gt;
&lt;h3 id=&#34;pathname-expansion&#34;&gt;Pathname expansion&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ ls
Desktop ls-output.txt Pictures Templates
Documents Music Public Videos

&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo D*
Desktop Documents

&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo *s
Documents Pictures Templates Videos

&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt;:upper:&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;*
Desktop Documents Music Pictures Public Templates Videos

&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo /usr/*/share
/usr/kerberos/share /usr/local/share
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;tilde-expansion&#34;&gt;Tilde expansion&lt;/h3&gt;
&lt;p&gt;As you know, &lt;code&gt;~&lt;/code&gt; has a special meaning of the home directory of current user.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo ~
/home/me

&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo ~foo
/home/foo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;arithmetic-expansion&#34;&gt;Arithmetic expansion&lt;/h3&gt;
&lt;p&gt;The shell allows arithmetic to be performed by expansion. This allows us to
use the shell prompt as a calculator:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo &lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo with &lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt; left over.
with &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; left over.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note: Arithmetic expansion supports only integers (whole numbers, no
decimals).&lt;/p&gt;
&lt;h3 id=&#34;brace-expansion&#34;&gt;Brace expansion&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo Front-&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;A,B,C&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;-Back
Front-A-Back Front-B-Back Front-C-Back
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Patterns to be brace expanded may contain a leading portion called a
&lt;em&gt;preamble&lt;/em&gt; and a trailing portion called a &lt;em&gt;postscript&lt;/em&gt;. The brace expression
itself may contain either a comma-separated list of strings or a range of
integers or single characters. The pattern may not contain embedded
whitespace.  Here is an example using a range of integers:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo Number_&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;1..5&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
Number_1 Number_2 Number_3 Number_4 Number_5

&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Z..A&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
Z Y X W V U T S R Q P O N M L K J I H G F E D C B A

&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo a&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;A&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;1,2&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,B&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;3,4&lt;span style=&#34;color:#f92672&#34;&gt;}}&lt;/span&gt;b
aA1b aA2b aB3b aB4b
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;command-substitution&#34;&gt;Command substitution&lt;/h3&gt;
&lt;p&gt;Command substitution allows us to use the output of a command as an
expansion:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;ls&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
Desktop Documents ls-output.txt Music Pictures Public Templates Videos

&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ ls -l &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;which cp&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
-rwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;71516&lt;/span&gt; 2012-12-05 08:58 /bin/cp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There is an alternative syntax for command substitution in older shell
programs that is also supported in bash . It uses back quotes instead
of the dollar sign and parentheses:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ ls -l &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;which cp&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
-rwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;71516&lt;/span&gt; 2012-12-05 08:58 /bin/cp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;quoting&#34;&gt;Quoting&lt;/h2&gt;
&lt;p&gt;Usage of single or double quotes in shell commands is confusing for me,
at least. Hey, take a look:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo are you     ok
are you ok

&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;are you     ok&amp;#39;&lt;/span&gt;
are you     ok

&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;are you     ok&amp;#34;&lt;/span&gt;
are you     ok

&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo The total is $100.00
The total is .00

&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;The total is $100.00&amp;#39;&lt;/span&gt;
The total is $100.00

&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The total is &lt;/span&gt;$100&lt;span style=&#34;color:#e6db74&#34;&gt;.00&amp;#34;&lt;/span&gt;
The total is .00
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Isn&amp;rsquo;t that confusing? Fortunately, the shell provides a mechanism called
quoting to selectively suppress unwanted expansions.&lt;/p&gt;
&lt;h3 id=&#34;double-quotes&#34;&gt;Double quotes&lt;/h3&gt;
&lt;p&gt;If you place text inside double quotes, all the special characters used
by the shell lose their special meaning and are treated as ordinary
characters. The exceptions are &lt;strong&gt;$ (dollar sign), \ (backslash),
and ` (back tick)&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;By default, word splitting looks for the presence of spaces, tabs, and
newlines (linefeed characters) and treats them as delimiters between
words. This means that unquoted spaces, tabs, and newlines are not
considered to be part of the text. They serve only as separators.
The fact that newlines are considered delimiters by the word splitting
mechanism causes an interesting, albeit subtle, effect on command
substitution. Consider the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;cal&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
February &lt;span style=&#34;color:#ae81ff&#34;&gt;2012&lt;/span&gt; Su Mo Tu We Th Fr Sa &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;cal&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
   February &lt;span style=&#34;color:#ae81ff&#34;&gt;2012&lt;/span&gt;
Su Mo Tu We Th Fr Sa
             &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
 &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the first instance, the unquoted command substitution resulted in
a command line containing 38 arguments; in the second, the result was a
command line with 1 argument that includes the embedded spaces and
newlines.&lt;/p&gt;
&lt;h3 id=&#34;single-quotes&#34;&gt;Single quotes&lt;/h3&gt;
&lt;p&gt;If we need to suppress all expansions, we use single quotes. Here is
a comparison of unquoted, double quotes, and single quotes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo text ~/*.txt &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;a,b&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;echo foo&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt; $USER
text /home/me/ls-output.txt a b foo &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; me
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text ~/*.txt {a,b} &lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;echo foo&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;$USER&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
text ~/*.txt &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;a,b&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; foo &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; me
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;text ~/*.txt {a,b} $(echo foo) $((2+2)) $USER&amp;#39;&lt;/span&gt;
text ~/*.txt &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;a,b&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;echo foo&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt; $USER
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As we can see, with each succeeding level of quoting, more and more
expansions are suppressed.&lt;/p&gt;
&lt;h2 id=&#34;variables-and-assignments&#34;&gt;Variables and assignments&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;the shell does not care about the type of data assigned to a variable; it treats them all as &lt;strong&gt;strings&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;in an assignment, there must be &lt;strong&gt;no spaces&lt;/strong&gt; between the variable name, the equal sign, and the value.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;z                 &lt;span style=&#34;color:#75715e&#34;&gt;# Assign the string &amp;#34;z&amp;#34; to variable a.&lt;/span&gt;
b&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a string&amp;#34;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Embedded spaces must be within quotes.&lt;/span&gt;
c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a string and &lt;/span&gt;$b&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Other expansions such as variables can be expanded into the assignment.&lt;/span&gt;
d&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;ls -l foo.txt&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Results of a command.&lt;/span&gt;
e&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Arithmetic expansion.&lt;/span&gt;
f&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\t\ta string\n&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Escape sequences such as tabs and newlines.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;here-documents&#34;&gt;&amp;ldquo;Here documents&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;A here document is an additional form of I/O redirection in which we
embed a body of text into our script and feed it into the standard input
of a command. It works like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;command &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt; token
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;text...
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;token&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;where command is the name of a command that accepts standard input and
token is a string used to indicate the end of the embedded text. For
example, you&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ cat &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt; _EOF_
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;heredoc&amp;gt; are you
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;heredoc&amp;gt; ok?
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;heredoc&amp;gt; Yes i am.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;heredoc&amp;gt; And you?
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;heredoc&amp;gt; _EOF_&lt;/span&gt;
are you
ok?
Yes i am.
And you?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Namely, you just use a custom EOF indicator of the input to that command.
So what’s the advantage of using a here document? It’s mostly the same as
echo , except that, by default, single and double quotes within here
documents lose their special meaning to the shell. Here is a
command-line example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ foo&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;some text&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ cat &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt; _EOF_
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; $foo
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; &amp;#34;$foo&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; &amp;#39;$foo&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; \$foo
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; _EOF_&lt;/span&gt;
some text
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;some text&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;some text&amp;#39;&lt;/span&gt;
$foo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As we can see, the shell pays no attention to the quotation marks. It
treats them as ordinary characters. This allows us to embed quotes freely within a here document.&lt;/p&gt;
&lt;p&gt;If we change the redirection operator from &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; to &lt;code&gt;&amp;lt;&amp;lt;-&lt;/code&gt; , the shell will
ignore leading tab characters in the here document. This allows a here
document to be indented, which can improve readability:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ cat &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;- E_o_F
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;heredocd&amp;gt; no indent
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;heredocd&amp;gt;    indent
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;heredocd&amp;gt;         hiahia
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;heredocd&amp;gt;         E_o_F&lt;/span&gt;
heredocd&amp;gt; E_o_F
no indent
   indent
        hiahia
        E_o_F
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;flow-control&#34;&gt;Flow control&lt;/h2&gt;
&lt;h3 id=&#34;using-if&#34;&gt;Using &lt;code&gt;if&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The syntax of if-statement is&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; commands; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
  commands
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; commands; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
  commands...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
  commands&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;where commands is a list of commands. This may be a little confusing at
first glance, &amp;ldquo;if&amp;rdquo; should judge a condition rather than a series of
commands. This leads to the concept of &lt;strong&gt;exit status&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Commands (including the scripts and shell functions we write) issue a
value to the system when they terminate, called an exit status. This
value, which is an integer in the range of 0 to 255, indicates the
success or failure of the command’s execution. By convention, a value
of 0 indicates success, and any other value indicates failure. The shell
provides a parameter that we can use to examine the exit status. Here
we see it in action:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ ls -d /usr/bin
/usr/bin
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo $?
&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ ls -d /bin/usr
ls: cannot access /bin/usr: No such file or directory
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo $?
&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The shell provides two extremely simple built-in commands that do
nothing except terminate with either a 0 or 1 exit status. The true
command always executes successfully, and the false command always
executes unsuccessfully:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ true
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo $?
&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ false
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ echo $?
&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;using-test&#34;&gt;Using &lt;code&gt;test&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;By far, the command used most frequently with if is &lt;code&gt;test&lt;/code&gt;. The test
command performs a variety of checks and comparisons. It has two
equivalent forms:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;test expression
&lt;span style=&#34;color:#75715e&#34;&gt;# or&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; expression &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;where &amp;ldquo;expression&amp;rdquo; is an expression that is evaluated as either true or
false. The test command returns an exit status of 0 when the expression
is true and a status of 1 when the expression is false.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;File expressions&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Expression&lt;/th&gt;
&lt;th&gt;Is true if&amp;hellip;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;file1 -nt file2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;file1&lt;/code&gt; is newer than &lt;code&gt;file2&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;file1 -ot file2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;file1&lt;/code&gt; is older than &lt;code&gt;file2&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-d file&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;file&lt;/code&gt; exists and is a directory.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-e file&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;file&lt;/code&gt; exists.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-L file&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;file&lt;/code&gt; exists and is a symbolic link.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-r file&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;file&lt;/code&gt; exists and is readable (has readable permission for the effective user).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-s file&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;file&lt;/code&gt; exists and has a length greater than zero.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-w file&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;file&lt;/code&gt; exists and is writable (has writable permission for the effective user).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-x file&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;file&lt;/code&gt; exists and is executable (has execute/search permission for the effective user).&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;String expressions&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Expression&lt;/th&gt;
&lt;th&gt;Is true if&amp;hellip;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt; is not null&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-n string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;the length of &lt;code&gt;string&lt;/code&gt; is greater than zero&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-z string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;the length of &lt;code&gt;string&lt;/code&gt; is zero&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;string1 == string2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string1&lt;/code&gt; and &lt;code&gt;string2&lt;/code&gt; are equal.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;string1 != string2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string1&lt;/code&gt; and &lt;code&gt;string2&lt;/code&gt; are not equal.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;string1 &amp;gt; string2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string1&lt;/code&gt; sorts after &lt;code&gt;string2&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;string1 &amp;lt; string2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string1&lt;/code&gt; sorts before &lt;code&gt;string2&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Note: the &amp;gt; and &amp;lt; expression must be quoted (or escaped with a backslash)
when used with &lt;code&gt;test&lt;/code&gt;, oterwise they will be interpreted as the shell
redirection opreators.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Integer expressions&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Expression&lt;/th&gt;
&lt;th&gt;Is true if&amp;hellip;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;integer1 -eq integer2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;integer1&lt;/code&gt; is equal to &lt;code&gt;integer2&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;integer1 -ne integer2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;integer1&lt;/code&gt; is not equal to &lt;code&gt;integer2&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;integer1 -le integer2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;integer1&lt;/code&gt; is less than or equal to &lt;code&gt;integer2&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;integer1 -lt integer2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;integer1&lt;/code&gt; is less than &lt;code&gt;integer2&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;integer1 -ge integer2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;integer1&lt;/code&gt; is greater than or equal to &lt;code&gt;integer2&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;integer1 -gt integer2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;integer1&lt;/code&gt; is greater than &lt;code&gt;integer2&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;modern-test&#34;&gt;Modern &lt;code&gt;test&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Recent versions of bash include a compound command that acts as an
enhanced replacement for &lt;code&gt;test&lt;/code&gt; . It uses the following syntax:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; expression &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;where expression is an expression that evaluates to either a true or false
result. The [[ ]] command is very similar to test (it supports all of its
expressions) but adds an important new string expression:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;string &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;~ regex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;which returns true if &lt;code&gt;string&lt;/code&gt; is matched by the extended regular expression
&lt;code&gt;regex&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;--designed-for-integers&#34;&gt;(( ))-Designed for integers&lt;/h2&gt;
&lt;p&gt;(( )) is used to perform &lt;strong&gt;arithmetic truth tests&lt;/strong&gt;. An arithmetic truth test
results in true if the result of the arithmetic evaluation is non-zero.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;((&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;It is true.&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
It is true.
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$ &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;((&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;It is true.&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;me@linuxbox ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;$&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;shell-function&#34;&gt;Shell function&lt;/h2&gt;
&lt;p&gt;Shell functions must be declared before using it. There are two ways to
define a shell function:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; name &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
  commands
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

name &lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
  commands
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;use-local-variables-in-shell-functions&#34;&gt;Use local variables in shell functions&lt;/h3&gt;
&lt;p&gt;Local variables are accessible only within the shell function
in which they are defined, and they cease to exist once the shell function
terminates.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# local-vars: script to demonstrate local variables&lt;/span&gt;

foo&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;# global&lt;/span&gt;

func1&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
  local foo&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;# local&lt;/span&gt;
  echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;func1 foo = &lt;/span&gt;$foo&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

func2&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
  local foo&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;# local&lt;/span&gt;
  echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;func1 foo = &lt;/span&gt;$foo&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;global foo = &lt;/span&gt;$foo&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
func1
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;global foo = &lt;/span&gt;$foo&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
func2
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;global foo = &lt;/span&gt;$foo&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ ./local-vars
global foo &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
func1 foo &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
global foo &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
func1 foo &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
global foo &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We see that the assignment of values to the local variable foo within
both shell functions has no effect on the value of foo defined outside the
functions.&lt;/p&gt;
&lt;p&gt;TO BE CONTINUED&amp;hellip;&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.amazon.com/product-reviews/1593279523&#34;&gt;&amp;ldquo;The Linux Command Line, A Complete Introduction&amp;rdquo;&lt;/a&gt;, William E. Shotts, Jr. &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
- https://guyueshui.github.io/yukynn/posts/shell-intro/ - </description>
        </item>
    
    
    
        <item>
        <title>Useful Tricks</title>
        <link>https://guyueshui.github.io/yukynn/posts/tricks/</link>
        <pubDate>Thu, 17 Jan 2019 22:19:05 +0000</pubDate>
        
        <guid>https://guyueshui.github.io/yukynn/posts/tricks/</guid>
        <description>Yukynnの窝 https://guyueshui.github.io/yukynn/posts/tricks/ -&lt;pre&gt;&lt;code&gt; __    __               __           __               ____    ___                       
/\ \  /\ \             /\ \      __ /\ \             /\  _`\ /\_ \                      
\ `\`\\/&#39;/__  __    ___\ \ \___ /\_\\ \/      ____   \ \ \L\ \//\ \     ___      __     
 `\ `\ /&#39;/\ \/\ \  /&#39;___\ \  _ `\/\ \\/      /&#39;,__\   \ \  _ &amp;lt;&#39;\ \ \   / __`\  /&#39;_ `\   
   `\ \ \\ \ \_\ \/\ \__/\ \ \ \ \ \ \      /\__, `\   \ \ \L\ \\_\ \_/\ \L\ \/\ \L\ \  
     \ \_\\/`____ \ \____\\ \_\ \_\ \_\     \/\____/    \ \____//\____\ \____/\ \____ \ 
      \/_/ `/___/&amp;gt; \/____/ \/_/\/_/\/_/      \/___/      \/___/ \/____/\/___/  \/___L\ \
              /\___/                                                             /\____/
              \/__/                                                              \_/__/ &#39;`
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;此页内容多为软件使用技巧，绝大部分内容来自互联网，如有侵权，请与&lt;a href=&#34;mailto:guyueshui002@gmail.com&#34;&gt;我&lt;/a&gt;联系。也有部分内容系自己使用软件所得的一些经验，仅供参考。&lt;/p&gt;
&lt;h2 id=&#34;ffmepg&#34;&gt;FFmepg&lt;/h2&gt;
&lt;h3 id=&#34;转视频为gif&#34;&gt;转视频为gif&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ffmpeg -i input.mkv out.gif
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;又：加速播放。假设原视频 60 fps，输出降到 30 fps，丢掉一半的帧。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;ffmpeg -r &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; -i input.mkv -r &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt; out.gif
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;又：不想丢帧。将输入扩大一倍，输出保留原样。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;ffmpeg -r &lt;span style=&#34;color:#ae81ff&#34;&gt;120&lt;/span&gt; -i input.mkv -r &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; out.gif
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;又：不想全转。从视频的第2秒开始，截取3秒转化为gif。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## 从视频中第二秒开始，截取时长为3秒的片段转化为 gif&lt;/span&gt;
ffmpeg -t &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; -ss 00:00:02 -i input.mkv out-clip.gif
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;又：控制转化质量。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## 默认转化是中等质量模式，若要转化出高质量的 gif，可以修改比特率&lt;/span&gt;
ffmpeg -i input.mkv -b 2048k out.gif
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;imagemagick&#34;&gt;ImageMagick&lt;/h2&gt;
&lt;h3 id=&#34;图片转换&#34;&gt;图片转换&lt;/h3&gt;
&lt;p&gt;转换图片为指定分辨率。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;convert -resize 1920x1080 src.jpg dst.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;又：按百分比转换大小。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;convert -resize 50%x50% src.jpg dst.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;又：忽略原始宽高比。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;convert -resize 300x300! src.jpg dst.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;shell&#34;&gt;Shell&lt;/h2&gt;
&lt;h3 id=&#34;行内操作&#34;&gt;行内操作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;^a&lt;/code&gt;: jump to BOL&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^e&lt;/code&gt;: jump to EOL&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^u&lt;/code&gt;: delete the line&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^k&lt;/code&gt;: delete to EOL&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^w&lt;/code&gt;: delete a word forward&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alt+f&lt;/code&gt;: jump a word forward&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alt+b&lt;/code&gt;: jump a word backward&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^r&lt;/code&gt;: search history&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alt+.&lt;/code&gt;: complete second parameter&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;任务控制&#34;&gt;任务控制&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;执行&lt;code&gt;command&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;按&lt;code&gt;^z&lt;/code&gt;挂起当前job&lt;/li&gt;
&lt;li&gt;按&lt;code&gt;bg&lt;/code&gt;后台继续该job&lt;/li&gt;
&lt;li&gt;按&lt;code&gt;fg&lt;/code&gt;召回前台&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;后台运行命令&#34;&gt;后台运行命令&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;command &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者如果你不想看到任何输出，使用&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;command &amp;amp;&amp;gt; /dev/null &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;如此你可以继续使用当前shell&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;bg&lt;/code&gt;查看是否有任务在后台运行&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;jobs&lt;/code&gt;查看后台任务&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;fg&lt;/code&gt;将任务召回前台&lt;/li&gt;
&lt;li&gt;不能退出shell，否则进程会被杀掉&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用&lt;code&gt;disown&lt;/code&gt;丢掉进程，可以退出shell&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;nohup command &amp;amp;&amp;gt; /dev/null &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;等价于以上的操作。单纯的&lt;code&gt;nohup command&lt;/code&gt;会在当前目录创建一个隐藏文件以写入命令的输出。以上命令将程序的输出重定向至比特桶丢弃。&lt;/p&gt;
&lt;h3 id=&#34;同时输出到console和文件&#34;&gt;同时输出到console和文件&lt;/h3&gt;
&lt;p&gt;将命令输出重定向到文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;SomeCommand &amp;gt; SomeFile.txt  &lt;span style=&#34;color:#75715e&#34;&gt;# overwrite&lt;/span&gt;
SomeCommand &amp;gt;&amp;gt; SomeFile.txt &lt;span style=&#34;color:#75715e&#34;&gt;# append&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将命令输出(stdout)及报错(stderr)重定向到文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;SomeCommand &amp;amp;&amp;gt; SomeFile.txt
SomeCommand &amp;amp;&amp;gt;&amp;gt; SomeFile.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;同时输出到console和文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;SomeCommand 2&amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; | tee SomeFile.txt     &lt;span style=&#34;color:#75715e&#34;&gt;# overwrite&lt;/span&gt;
SomeCommand 2&amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; | tee -a SomeFile.txt  &lt;span style=&#34;color:#75715e&#34;&gt;# append&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;          || visible in terminal ||   visible in file   || existing
  Syntax  ||  StdOut  |  StdErr  ||  StdOut  |  StdErr  ||   file
==========++==========+==========++==========+==========++===========
    &amp;gt;     ||    no    |   yes    ||   yes    |    no    || overwrite
    &amp;gt;&amp;gt;    ||    no    |   yes    ||   yes    |    no    ||  append
          ||          |          ||          |          ||
   2&amp;gt;     ||   yes    |    no    ||    no    |   yes    || overwrite
   2&amp;gt;&amp;gt;    ||   yes    |    no    ||    no    |   yes    ||  append
          ||          |          ||          |          ||
   &amp;amp;&amp;gt;     ||    no    |    no    ||   yes    |   yes    || overwrite
   &amp;amp;&amp;gt;&amp;gt;    ||    no    |    no    ||   yes    |   yes    ||  append
          ||          |          ||          |          ||
 | tee    ||   yes    |   yes    ||   yes    |    no    || overwrite
 | tee -a ||   yes    |   yes    ||   yes    |    no    ||  append
          ||          |          ||          |          ||
 n.e. (*) ||   yes    |   yes    ||    no    |   yes    || overwrite
 n.e. (*) ||   yes    |   yes    ||    no    |   yes    ||  append
          ||          |          ||          |          ||
|&amp;amp; tee    ||   yes    |   yes    ||   yes    |   yes    || overwrite
|&amp;amp; tee -a ||   yes    |   yes    ||   yes    |   yes    ||  append
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Ref:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://askubuntu.com/questions/420981/how-do-i-save-terminal-output-to-a-file&#34;&gt;https://askubuntu.com/questions/420981/how-do-i-save-terminal-output-to-a-file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/bash/manual/bash.html#Redirections&#34;&gt;https://www.gnu.org/software/bash/manual/bash.html#Redirections&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;从系统中踢出某个用户&#34;&gt;从系统中踢出某个用户&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# See the pid of the user&amp;#39;s login process.&lt;/span&gt;
$ who -u
yychi    tty1         2020-02-19 21:06  旧        &lt;span style=&#34;color:#ae81ff&#34;&gt;460&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Let him know he will be kick off.&lt;/span&gt;
$ echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;You&amp;#39;ll be kick off by system administrator.&amp;#34;&lt;/span&gt; | write yychi

&lt;span style=&#34;color:#75715e&#34;&gt;# Kick off.&lt;/span&gt;
$ kill -9 &lt;span style=&#34;color:#ae81ff&#34;&gt;460&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Done.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ref: &lt;a href=&#34;https://www.putorius.net/kick-user-off-linux-system.html&#34;&gt;https://www.putorius.net/kick-user-off-linux-system.html&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;command-find&#34;&gt;Command &lt;code&gt;find&lt;/code&gt;&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ find --help
Usage: find &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-H&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-L&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-P&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-Olevel&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-D help|tree|search|stat|rates|opt|exec&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;path...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;expression&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;前面的选项不常用，初级使用只需掌握&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;find &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;path...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;expression&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt; - search path&lt;/li&gt;
&lt;li&gt;&lt;code&gt;expression&lt;/code&gt; - expands to &lt;code&gt;-options [-print -exec -ok]&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-options&lt;/code&gt;: 指定find常用选项&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-print&lt;/code&gt;: 将匹配到的文件写入标准输出[默认]&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-exec&lt;/code&gt;: 在匹配到的文件上执行一串命令。格式为&lt;code&gt;&amp;lt;command&amp;gt; {} \;&lt;/code&gt;，注意 {} 和 ; 之间的空格。
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;find . -size 0 -exec rm {} \;&lt;/code&gt; - 删除当前目录下size为0的文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rm -i $(find . -size 0)&lt;/code&gt; - 同上&lt;/li&gt;
&lt;li&gt;&lt;code&gt;find . -size 0 | xargs rm -f &amp;amp;&lt;/code&gt; - 同上&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ok&lt;/code&gt;: 同上，执行命令前会询问&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;常用选项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name - 按照文件名查找
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;find &amp;lt;dir&amp;gt; -name &amp;quot;*.cpp&amp;quot;&lt;/code&gt;: 在目录dir下查找后缀为cpp的文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;perm - 按照文件权限查找&lt;/li&gt;
&lt;li&gt;user - 按照文件所有者查找&lt;/li&gt;
&lt;li&gt;group - 按照文件所有组查找&lt;/li&gt;
&lt;li&gt;type - 按照文件类型查找&lt;/li&gt;
&lt;li&gt;size - 按照文件大小查找&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;几个例子&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;find . -name &amp;quot;*name*&amp;quot;&lt;/code&gt; - 找出当前文件夹文件名包含“name”的文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;find . ! -type d -print&lt;/code&gt; - 在当前目录查找非目录文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;find . -newer file1 ! file2&lt;/code&gt; - 查找比file1新但比file2旧的文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;find -type d -empty | xargs -n 1 rmdir&lt;/code&gt; - 批量删除当前目录下的空文件夹&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;command-grep&#34;&gt;Command &lt;code&gt;grep&lt;/code&gt;&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;command-sed&#34;&gt;Command &lt;code&gt;sed&lt;/code&gt;&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;git&#34;&gt;Git&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;创建别名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;git log&lt;/code&gt; 查看提交历史，但是输出冗杂。通常使用&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;git log --oneline --abbrev-commit --all --graph --decoreate --color
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;来获得更美观易读的输出。但是每次输入这么多肯定很烦人，使用&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;git config --global alias.graph &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log --graph --oneline --decorate=short&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;增加一个全局别名，这个别名对于任何地方的 &lt;code&gt;git&lt;/code&gt; 都适用。如此一来，键入 &lt;code&gt;git graph&lt;/code&gt; 会等效于&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git log --graph --oneline --decorate&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;short
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;样例输出：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ git graph

* 36f2d65 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;HEAD -&amp;gt; master, origin/master, origin/HEAD&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; Forget it
* 9b4a6d7 Update ref list
* 3931d4d Using relative path &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; image
* ba18821 Upload pics
* ceca69a fixed reference
* be15df2 fixed picture address
* 97a36f3 Initial commit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;忽略已经添加的文件&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git rm --cached &amp;lt;somefiles&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;推送本地分支到远程&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 远程分支如果不存在，则自动创建。&lt;/span&gt;
git push origin &amp;lt;local_brach&amp;gt;:&amp;lt;remote_branch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;拉取远程分支到本地&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 从远程分支切换（并创建，如果不存在）本地分支&lt;/span&gt;
git checkout -b &amp;lt;local_branch&amp;gt; origin/&amp;lt;remote_branch&amp;gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# 另：取回远程分支并创建对应的本地分支，不换自动切换到该分支&lt;/span&gt;
git fetch origin &amp;lt;remote_brach&amp;gt;:&amp;lt;local_branch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;删除commit历史&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果不小心将隐私信息推送至远程仓库（如github），那么仅仅删除再更新再推送到远程仓库覆盖是不够的，别人还是可以通过你的commit历史查到你所做的更改，所以这种情况下必须删除之前所有的commit history. 大致思路是创建一个孤立分支，然后重新添加文件，再删除master分支，将新建的分支重命名为master，再推送到远程强制覆盖&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Check out to a temporary branch:&lt;/span&gt;
git checkout --orphan TEMP_BRANCH

&lt;span style=&#34;color:#75715e&#34;&gt;# Add all the files:&lt;/span&gt;
git add -A

&lt;span style=&#34;color:#75715e&#34;&gt;# Commit the changes:&lt;/span&gt;
git commit -am &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Initial commit&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Delete the old branch:&lt;/span&gt;
git branch -D master

&lt;span style=&#34;color:#75715e&#34;&gt;# Rename the temporary branch to master:&lt;/span&gt;
git branch -m master

&lt;span style=&#34;color:#75715e&#34;&gt;# Finally, force update to our repository:&lt;/span&gt;
git push -f origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;合并某个文件到当前分支&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;例如当前在master分支，希望合并某个分支dev的某个或多个文件到当前分支：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git checkout dev file1 file2 ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是上述做法会强行覆盖当前分支的文件，没有冲突处理，更安全的做法是先从当前分支新建分支master_temp，然后在master_temp中checkout，最后再将master_temp分支merge到master分支：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create a branch based on master&lt;/span&gt;
git checkout -b master_temp

&lt;span style=&#34;color:#75715e&#34;&gt;# Chechkout file1 from dev to master_temp&lt;/span&gt;
git checkout dev file1
git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;checkout file1 from dev&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Switch to master and merge, then delete&lt;/span&gt;
git checkout master
git merge master_temp
git branch -d master_temp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ref: &lt;a href=&#34;https://segmentfault.com/a/1190000008360855&#34;&gt;https://segmentfault.com/a/1190000008360855&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;command-g&#34;&gt;Command &lt;code&gt;g++&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;自定义包含路径&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;g++ main.cpp -I/usr/local/include
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;自定义链接静态或动态库&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;g++ main.cpp -L/path/to/lib_file
g++ main.cpp -L/usr/lib64 -lcurl -lssl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面第二个命令链接了&lt;code&gt;/usr/lib64/&lt;/code&gt;目录下的&lt;code&gt;libcurl.so&lt;/code&gt;和&lt;code&gt;libssl.so&lt;/code&gt;两个动态库文件。静态库也是同样链接。说起来静态库，想起了最近折腾的一个东西，你可能会想把多个静态库合成一个静态库，想当然的直接用&lt;code&gt;ar&lt;/code&gt;合并，但是不行，必须要把两个静态库全解压出来，再合并所有的object file. 参见：&lt;a href=&#34;https://www.cnblogs.com/fnlingnzb-learner/p/8127456.html&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;生成机器码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;g++ main.cpp -c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;生成汇编代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;g++ main.cpp -S
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;仅预编译&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;g++ main.cpp -E &amp;gt; main.i
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;aria2c&#34;&gt;Aria2c&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://aria2.github.io/&#34;&gt;aria2c&lt;/a&gt; 是个好东西。支持连接，磁力，种子下载。轻量且强大，可直接使用，也可作为服务端，配合WebUI使用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;配置：参考 &lt;a href=&#34;https://binux.blog/2012/12/aria2-examples/&#34;&gt;aria2配置示例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;WebUI:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://binux.github.io/yaaw/demo/&#34;&gt;YAAW&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ziahamza.github.io/webui-aria2/#&#34;&gt;ziahamza&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ariang.mayswind.net/latest/&#34;&gt;AriaNg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: jsonrpc 地址格式为 &lt;code&gt;http://token:&amp;lt;rpc-secret&amp;gt;@hostname:port/jsonrpc&lt;/code&gt;
令牌填写自己设置的 &lt;code&gt;rpc-secret&lt;/code&gt;
&lt;img src=&#34;https://i.loli.net/2018/12/28/5c263327c4214.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;xxx&lt;/code&gt; 替换为自己设置的 &lt;code&gt;rpc-secret&lt;/code&gt;
&lt;img src=&#34;https://i.loli.net/2018/12/28/5c263398854c3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;mpv&#34;&gt;MPV&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://mpv.io&#34;&gt;MPV&lt;/a&gt; 是一个轻量、简约、跨平台的播放器。据我自己体验，在Linux下比mplayer播放效果要好，mplayer倍速会掉帧，而mpv则不太明显。&lt;/p&gt;
&lt;h2 id=&#34;html&#34;&gt;HTML&lt;/h2&gt;
&lt;p&gt;给网页添加BGM。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;embed&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bgm.mp3&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;autostart&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loop&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;300&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;height&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;20&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;hidden&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;又，添加可以控制播放的音乐。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;audio&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;autoplay&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;autoplay&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;controls&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;controls&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loop&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;loop&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;preload&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;auto&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;music.mp3&amp;#34;&lt;/span&gt;&amp;gt;Your browser doesn&amp;#39;t support H5 audio flag!&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;audio&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;使用xrandr设置多屏显示&#34;&gt;使用&lt;code&gt;xrandr&lt;/code&gt;设置多屏显示&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ xrandr
Screen 0: minimum &lt;span style=&#34;color:#ae81ff&#34;&gt;320&lt;/span&gt; x 200, current &lt;span style=&#34;color:#ae81ff&#34;&gt;1920&lt;/span&gt; x 1080, maximum &lt;span style=&#34;color:#ae81ff&#34;&gt;8192&lt;/span&gt; x &lt;span style=&#34;color:#ae81ff&#34;&gt;8192&lt;/span&gt;
eDP-1 connected primary 1920x1080+0+0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;normal left inverted right x axis y axis&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 294mm x 165mm
   1920x1080     59.93*+
   1680x1050     59.95    59.88
   1400x1050     59.98
   1600x900      59.99    59.94    59.95    59.82
   1280x1024     60.02
   1400x900      59.96    59.88
   1280x960      60.00
   1440x810      60.00    59.97
   1368x768      59.88    59.85
   1280x800      59.99    59.97    59.81    59.91
   1280x720      60.00    59.99    59.86    59.74
   1024x768      60.04    60.00
   960x720       60.00
   928x696       60.05
   896x672       60.01
   1024x576      59.95    59.96    59.90    59.82
   960x600       59.93    60.00
   960x540       59.96    59.99    59.63    59.82
   800x600       60.00    60.32    56.25
   840x525       60.01    59.88
   864x486       59.92    59.57
   700x525       59.98
   800x450       59.95    59.82
   640x512       60.02
   700x450       59.96    59.88
   640x480       60.00    59.94
   720x405       59.51    58.99
   684x384       59.88    59.85
   640x400       59.88    59.98
   640x360       59.86    59.83    59.84    59.32
   512x384       60.00
   512x288       60.00    59.92
   480x270       59.63    59.82
   400x300       60.32    56.34
   432x243       59.92    59.57
   320x240       60.05
   360x202       59.51    59.13
   320x180       59.84    59.32
DP-1 disconnected &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;normal left inverted right x axis y axis&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
HDMI-1 disconnected &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;normal left inverted right x axis y axis&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
HDMI-2 connected 1920x1080+0+0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;normal left inverted right x axis y axis&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 527mm x 296mm
   1920x1080     60.00*+  60.00    50.00    59.94
   1920x1080i    60.00    60.00    50.00    59.94
   1600x1200     60.00
   1280x1024     75.02    60.02
   1152x864      75.00
   1280x720      60.00    60.00    50.00    59.94
   1024x768      75.03    60.00
   800x600       75.00    60.32
   720x576       50.00    50.00
   720x576i      50.00    50.00
   720x480       60.00    60.00    59.94    59.94    59.94
   720x480i      60.00    60.00    59.94    59.94
   640x480       75.00    60.00    59.94    59.94
   720x400       70.08
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;观察输出可知，连接了两个显示器(eDP-1, HDMI-2)，其中eDP-1是主显示器。如果第二块屏幕无显示，执行下面的命令。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;xrandr --output HDMI-2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;又，指定分辨率为1920x1080，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;xrandr --output HDMI-2 --mode 1920x1080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;又，设置为右侧扩展屏，即光标向右可移动至第二块屏，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;xrandr --output HDMI-2 --right-of eDP-1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;又，连接上第二块屏，想关掉内置显示屏，（警告：不要随便关掉内置屏）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;xrandr --output eDP-1 --off
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;又，开启内置屏。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;xrandr --output eDP-1 --auto
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;网络&#34;&gt;网络&lt;/h2&gt;
&lt;p&gt;查看被监听端口&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;netstat -tulpn | grep LISTEN
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;htop基本操作&#34;&gt;Htop基本操作&lt;/h2&gt;
&lt;p&gt;Htop类似于top，但比top更现代化，支持鼠标操作，支持颜色主题。在命令行键入htop，会呈现如下界面。(图片来源：https://blog.csdn.net/freeking101/article/details/79173903)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://guyueshui.github.io/yukynn/img/htop.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;平均负载区的三个数字分别表示过去5、10、15分钟系统的平均负载。进程区每一列的意义分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PID: 进程号&lt;/li&gt;
&lt;li&gt;USER: 进程所有者的用户名&lt;/li&gt;
&lt;li&gt;PRI: 优先级别&lt;/li&gt;
&lt;li&gt;NI: NICE值（优先级别数值），越小优先级越高&lt;/li&gt;
&lt;li&gt;VIRT: 虚拟内存&lt;/li&gt;
&lt;li&gt;RES: 物理内存&lt;/li&gt;
&lt;li&gt;SHR: 共享内存&lt;/li&gt;
&lt;li&gt;S: 进程状态（S[leep], R[unning], Z[ombie], N表示优先级为负数）&lt;/li&gt;
&lt;li&gt;CPU%: 该进程占用的CPU使用率&lt;/li&gt;
&lt;li&gt;MEM%: 该进程占用的物理内存和总内存的百分比&lt;/li&gt;
&lt;li&gt;TIME+: 该进程启动后占用的CPU时间&lt;/li&gt;
&lt;li&gt;Command: 该进程的启动命令&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常用快捷键可在htop界面按?显示。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;H: 显示/隐藏用户子线程&lt;/li&gt;
&lt;li&gt;Space: 标记进程&lt;/li&gt;
&lt;li&gt;k: 杀死已标记进程&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;reference&#34;&gt;Reference&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kxp555.coding.me/2017/11/23/Linux%E4%B8%8B%E8%A7%86%E9%A2%91%E8%BD%ACgif/&#34;&gt;linux下视频转gif&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.maketecheasier.com/run-bash-commands-background-linux/&#34;&gt;Running Bash Commands in the Background the Right Way [Linux]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://gist.github.com/heiswayi/350e2afda8cece810c0f6116dadbe651&#34;&gt;https://gist.github.com/heiswayi/350e2afda8cece810c0f6116dadbe651&lt;/a&gt; &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
- https://guyueshui.github.io/yukynn/posts/tricks/ - </description>
        </item>
    
    
    
        <item>
        <title>记一次重装 Linux</title>
        <link>https://guyueshui.github.io/yukynn/posts/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%87%8D%E8%A3%85linux/</link>
        <pubDate>Mon, 13 Aug 2018 10:07:05 +0000</pubDate>
        
        <guid>https://guyueshui.github.io/yukynn/posts/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%87%8D%E8%A3%85linux/</guid>
        <description>Yukynnの窝 https://guyueshui.github.io/yukynn/posts/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%87%8D%E8%A3%85linux/ -&lt;p&gt;放假回家，因故将笔记本电池弄到枯竭。结果再次开启，发现 &lt;code&gt;startx&lt;/code&gt; 启动 gnome-session 失败。几经解决未果，只好重装！&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;安装-archlinux&#34;&gt;安装 Archlinux&lt;/h2&gt;
&lt;p&gt;基本安装步骤都是按照 ArchWiki 上的 &lt;a href=&#34;https://wiki.archlinux.org/index.php/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)&#34;&gt;Installation Guide&lt;/a&gt; 以及简书上的一篇文章 &lt;a href=&#34;https://www.jianshu.com/p/82a40aac52aa&#34;&gt;虚拟机安装Archlinux的简易步骤&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;安装过程主要可以分为以下几个步骤：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.分区&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一般而言只需要分 3 个区：根（&lt;code&gt;/&lt;/code&gt;），用户主目录(&lt;code&gt;/home&lt;/code&gt;) 以及 &lt;code&gt;swap&lt;/code&gt; 交换。贴一下我的分区图
&lt;img src=&#34;https://s2.ax1x.com/2019/01/18/kpjHnx.png&#34; alt=&#34;分区信息&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到，一块磁盘 (disk) 被分成很多的分区 (partition) . 其中，稍微现代一点的电脑主板都启用了 &lt;a href=&#34;https://wiki.archlinux.org/index.php/Unified_Extensible_Firmware_Interface_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)&#34;&gt;UEFI&lt;/a&gt;，所以在磁盘第一个分区是 &lt;a href=&#34;https://wiki.archlinux.org/index.php/EFI_system_partition_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)&#34;&gt;ESP&lt;/a&gt; 分区。这个分区中就包含了所有可启动系统的启动文件。在没有安装 Linux 之前，它里面只包含有 Windows 自带的启动文件。在安装完成 Linux 后，由于有两个可启动的系统，所以需要一个引导程序(&lt;a href=&#34;https://wiki.archlinux.org/index.php/REFInd&#34;&gt;rEFInd&lt;/a&gt;, Grub 等)来将选择权交给用户。&lt;/p&gt;
&lt;p&gt;上图中的最后三个分区即为 Linux 系统的分区。分区大小的划分事实上很讲究，我根据之前的经验，&lt;code&gt;/home&lt;/code&gt; 分 50GB 够用了，如果不放什么大型视频和音频文件的话。swap 分区的大小一般为已安装内存的一半，比如我的系统内存 8GB，swap 就分 4GB.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.格式化分区&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Linux 文件系统一般是 ext4，使用如下命令格式化分区&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;mkfs.ext4 /dev/nvme0n1p5
mkfs.ext4 /dev/nvme0n1p6
mkfs.ext4 /dev/nvme0n1p7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;3.挂载目录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将各目录挂载到对应的分区，例如&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;mount /dev/nvme0n1p5 /mnt
mount /dev/nvme0n1p6 /mnt/home
&lt;span style=&#34;color:#75715e&#34;&gt;# boot分区其实应该单独分出来&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 但是我们已经有了 esp 分区&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 要和原来的 Windows 兼容&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 只需要将该 esp 分区挂载到 /boot/efi 目录下&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 之后安装 bootloader 时会把 Linux 的启动文件放到 esp 分区&lt;/span&gt;
mount /dev/nvme0n1p1 /mnt/boot/efi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;开启 swap 分区以便之后生成 fstab 时检测&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;swapon /dev/nvme0n1p7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;4.执行安装&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;核心命令为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;pacstrap -i /mnt base base-devel net-tools
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其余细节参考 ArchWiki. 值得一提的是，&lt;code&gt;base&lt;/code&gt; 组里面包含的程序包有限，所以追加了 &lt;code&gt;base-devel&lt;/code&gt; 和网络配置工具包 &lt;code&gt;net-tools&lt;/code&gt;.  注意执行安装命令前，对 &lt;code&gt;/etc/pacman.d/mirrorlist&lt;/code&gt; 进行相关修改，把中国的镜像放在前面，使得下载速度更快。还有几个有用的网络工具包也一并装了 &lt;code&gt;iw, wpa_supplicant, dialog&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.后续步骤&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;后续就是 arch-chroot 到新安装系统中进行相关设置：hostname，hosts，时区，locale 等。这些在 Installation Guide 中均有提及，不再赘述。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6.小结&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以上，一个新的 Archlinux 就安装完成了。不过这只是一个简陋的系统，还没有进行配置，只能用终端输命令的那种。后续配置参考简书那篇文章。&lt;/p&gt;
&lt;p&gt;这次安装，我的最大的一个收获就是学会了如何在命令行中连接 WiFi. 需要的工具有&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Package&lt;/th&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Note&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;dialog&lt;/td&gt;
&lt;td&gt;&lt;code&gt;wifi-menu&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;WiFi 直连&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;net-tools&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ifconfig&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;查看网络状态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wpa_supplicant&lt;/td&gt;
&lt;td&gt;&lt;code&gt;wpa_supplicant, wpa_passphrase&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;连接 WiFi&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dhcpcd&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dhcpcd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;动态 IP 地址获取&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;获取无线接口名称&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://s2.ax1x.com/2019/01/18/kpjqHK.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;好了，现在知道了，是 &lt;code&gt;wlp2s0&lt;/code&gt;. 一般也可能是 &lt;code&gt;wlan0&lt;/code&gt;. 然后确认该接口的状态是 up，如图所示。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;扫描可用网络&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;iw wlp2s0 scan
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;确定你要连接的无线网络名称 (SSID)，假设是 shiki.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;生成配置文件&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;wpa_passphrase shiki &amp;gt; ~/shiki.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;连接 WiFi&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;wpa_supplicant -B -i wlp2s0 -c ~/shiki.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;获取 IP 地址&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;dhcpcd wlp2s0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;查看连接状态&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;iw wlp2s0 link
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;另外，还有一种更加简单的方法，直接敲命令 &lt;code&gt;wifi-menu&lt;/code&gt; 可以进行交互式 WiFi 连接，体验和图形界面一样。&lt;/p&gt;
&lt;h2 id=&#34;安装-gnome&#34;&gt;安装 Gnome&lt;/h2&gt;
&lt;p&gt;来日在填&lt;/p&gt;
&lt;h2 id=&#34;系统美化&#34;&gt;系统美化&lt;/h2&gt;
&lt;h3 id=&#34;字体&#34;&gt;字体&lt;/h3&gt;
&lt;p&gt;如何在 Linux 上安装喜欢的&lt;a href=&#34;https://fonts.google.com/&#34;&gt;字体&lt;/a&gt;呢？只需要将对应的字体文件复制到相应的字体目录，再执行几个命令就 OK 了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下载字体&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;英文字体的话，&lt;a href=&#34;https://fonts.google.com/&#34;&gt;Google Fonts&lt;/a&gt; 基本可以完全搞定。&lt;/p&gt;
&lt;p&gt;关于中文字体，目前推荐的只有两个：&lt;a href=&#34;wenq.org&#34;&gt;文泉驿&lt;/a&gt;，&lt;a href=&#34;http://www.arphic.com.tw/&#34;&gt;文鼎&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;例如要将下载好的 Alegreya.zip 字体安装到系统，只需要将其解压：
&lt;img src=&#34;https://s2.ax1x.com/2019/01/18/kpjOAO.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到里面的字体文件。挑几个解释一下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Alegreya-Regular.ttf    # 常规字体
Alegreya-Italic.ttf    # 斜体
Alegreya-Bold.ttf    # 粗体
Alegreya-BoldItalic.ttf    # 粗斜体
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;一般而言，虽然一个字体包里面可能有很多字体文件，很多变体（粗体，特粗，细，特细等），我们只需要安装以上四种变体基本上就足够了。在 TeXLive 中，如果指定了字体族，那么其中的 &lt;code&gt;\emph&lt;/code&gt; 和 &lt;code&gt;\textbf&lt;/code&gt;命令会自动寻找相应的变体来排版。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;复制到指定目录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将这四个文件复制到系统字体文件夹&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 用户字体目录
~/.local/share/fonts

# 系统字体目录
/usr/share/fonts
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;为了便于管理，可以在系统字体目录下新建一个文件夹存放用户后续安装的字体，例如&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;mkdir /usr/share/fonts/userfonts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将需要安装的字体文件复制到上述文件夹，然后&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;执行安装命令&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;mkfontdir
mkfontscale

fc-cache -fv  &lt;span style=&#34;color:#75715e&#34;&gt;#刷新系统字体缓存&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;确认安装是否成功&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;fc-list | grep userfonts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://s2.ax1x.com/2019/01/18/kpvPDP.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;如图所示，可以看到在指定目录下的字体已经安装成功！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;卸载字体&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;删除相应字体文件，刷新系统字体缓存即可&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查看已安装字体&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;fc-list :lang&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;zh &lt;span style=&#34;color:#75715e&#34;&gt;# 查看支持中文的字体&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;- https://guyueshui.github.io/yukynn/posts/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%87%8D%E8%A3%85linux/ - </description>
        </item>
    
    
    
        <item>
        <title>雪压轩集</title>
        <link>https://guyueshui.github.io/yukynn/posts/%E9%9B%AA%E5%8E%8B%E8%BD%A9%E9%9B%86/</link>
        <pubDate>Sun, 27 Dec 2015 14:39:33 +0000</pubDate>
        
        <guid>https://guyueshui.github.io/yukynn/posts/%E9%9B%AA%E5%8E%8B%E8%BD%A9%E9%9B%86/</guid>
        <description>Yukynnの窝 https://guyueshui.github.io/yukynn/posts/%E9%9B%AA%E5%8E%8B%E8%BD%A9%E9%9B%86/ -&lt;h2 id=&#34;1-浣溪沙&#34;&gt;1. 【浣溪沙】&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;暖雨无晴漏几丝，牧童斜插嫩花枝。小田新麦上场时。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;汲水种瓜偏怒早，忍烟炊黍又嗔迟。日长酸透软腰肢。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;据传，这首词是用粉写在一张芍药叶片上的。词的上片意象很美，你看，初夏的阵雨飘飞在山谷田野，已上场的新麦散发着阵破清香，头上插花的牧童悠然自得地骑在牛背上。可是，在这样一个丰收的季节里，词人却没有丝毫的喜悦。她干完了农活，又要回家做饭，忙得腰酸背疼， 仍不免受到挑剔与责骂。怒早、嗔迟，真是左右为难。夫悍姑恶，一切都看不顺眼。双卿是那么的无助，身体、精神上备受煎熬，心中的苦闷、忧愤、伤痛无以排遣，无处表达，唯有借助手中的笔，将满腔的幽怨倾诉于纸上，形成一首首滴血含泪的诗篇。诗词是她唯一的听众，唯一的寄托，也是生命中唯一的闪光点，夜晚独自一人，内心的思绪如泉涌流于笔端，内心的痛苦也如泉水延绵流长，“此恨绵绵无绝期”，于是忍痛含悲，写下了这阕《浣溪沙》。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;2-望江南&#34;&gt;2. 【望江南】&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;春不见，寻过野桥西。染梦淡红欺粉蝶，锁愁浓绿骗黄鹂，幽恨莫重提。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;人不见，相见是还非？拜月有香空惹袖，惜花无泪可沾衣，山远夕阳低。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是女词人伤春怀旧之作。全词笼罩在凄冷欲绝的感情基调中，透露出满腔的幽恨。词人也有过美好的过去，有过情窦初开的青春年华，她还似乎曾有过美好而甜蜜的爱情，有过自己的心上人，然而吃人的封建婚姻制度，无情地拆散了有情人。上片“春不见”，暗指自己美好的青春韶华在自然的周而复始中一去不返，感叹往事不堪回首。下片“人不见”，所爱的人再难相见，即使相见，恐怕也因时过境迁而今昔非比了。正如苏东坡所云“纵使相逢应未识，尘满面，鬓如霜”啊。当日焚香拜月温馨的一幕浮现眼前，却已成过眼云烟。看着曾娇艳的花朵也已渐渐凋落，感叹逝者如斯，美好事物的不常在，却无泪沾衣，泪流尽了，心也碎了。往事已随花逝去，只留下淡淡的影子，眼前漂泊尽前事，恍若梦中。不幸的命运，正像眼前远山残照一样，令人黯然销魂。&lt;/p&gt;
&lt;p&gt;全词表情细腻婉转，凄恻动人，不雕饰，凭自己感受，似从心底流出。&lt;/p&gt;
&lt;h2 id=&#34;3-湿罗衣&#34;&gt;3. 【湿罗衣】&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;世间难吐只幽情，泪珠咽尽还生。手捻残花，无言倚屏。 镜里相看自惊，瘦亭亭。春容不是，秋容不是，可是双卿！&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;问世间情为何物？直叫人生死相许。而最痛苦的还是有情不能诉，有苦无处说。痛苦的泪珠，独自吞进肚里，可是，刚刚咽下，泪水又盈满眼眶了。伤悲难止，欲哭无声。人如残花，只有无言倚屏啊。顾影自怜，花容憔悴，自己也认不出自己了。词中，双卿用寻常的语言表现所见、所闻、所想，亲身经历，真实感受，透出一种别样的风采。&lt;/p&gt;
&lt;h2 id=&#34;4-玉京秋-自题种瓜小影&#34;&gt;4. 【玉京秋】 自题《种瓜小影》&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;眉半敛，春红已全褪，旧愁还欠。画中瘦影，羞人难闪。新病三分未醒，淡胭脂，空费轻染。凉生夜，月华如水，素娥无玷。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;翠袖啼痕堪验。海棠边，曾沾万点。怪近来，寻常梳裹，酸咸都厌。粉汗凝香蘸碧水，罗帕时揩冰簟。有谁念。原是花神暂贬？&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这首《玉京秋》是应段玉函之请而作。段玉函找画家张石林为双卿画了画像，是双卿种瓜图，请双卿自题一首词于其上，便是此词。&lt;/p&gt;
&lt;h2 id=&#34;5-二郎神菊花&#34;&gt;5. 【二郎神】菊花&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;丝丝脆柳，袅破淡烟依旧。向落日秋山影里，还喜花枝未瘦。苦雨重阳挨过了，亏耐到小春时候。知今夜，蘸微霜，蝶去自垂首。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;生受，新寒浸骨，病来还又。可是我双卿薄幸，撇你黄昏静后。月冷阑干人不寐，镇几夜，未松金扣。枉辜却、开向贫家，愁处欲浇无酒。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;清代陈廷焯撰《白雨斋词话》评曰：“此类皆忠厚缠绵，幽冷欲绝。而措语则既非温、韦，亦不类周、秦、姜、史，是仙是鬼，莫能名其境矣。”&lt;/p&gt;
&lt;h2 id=&#34;6-孤鸾病中&#34;&gt;6. 【孤鸾】病中&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;午寒偏准，早疟意初来，碧衫添衬。宿髻慵梳，乱裹帕罗齐鬓。忙中素裙未浣，褶痕边，断丝双损。玉腕近看如茧，可香腮还嫩。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;算一生凄楚也拚忍。便化粉成灰，嫁时先忖。锦思花情，敢被爨烟薰尽。东菑却嫌饷缓。冷潮回，热潮谁问？归去将棉晒取，又晚炊相近。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;双卿体质素弱，在娘家很少干重体力活，到周家后受尽折磨，患上了严重的疟疾，婆婆丈夫不但不治，而且丝毫不体贴她，重活脏活全要她承担。因为疟疾忽冷忽热经常发作，双卿被折磨得面黄肌瘦，憔悴不堪。有一次她提着竹篮去给田地干活的丈夫送饭，路上突然疟疾发作，倒在地上不停的寒战，好不容易挨了过去，她又跌跌撞撞向自家的田头走去。周大旺干活干得有些饿了，左等右等不见妻子送饭来，窝下了一肚子火。终于看见了妻子的身影，又是一副要死不活的子，顿时来了火气，顺手摸起身边的锄头便向双卿砸来。贺双卿大吃一惊，连忙丢下饭篮就往回跑去，脚下轻轻飘飘，头却昏昏沉沉。一路摔倒了好多次，才勉强摸进了家门。“算一生凄楚也拚忍。便化粉成灰，嫁时先忖。”这是词人在心底悲愤的控诉，可是，既然命中如此，双卿又有什么办法呢？“冷潮回，热潮谁问？”这是词人无助的叹息。在《孤鸾（病中）》中，她以巧妙地比喻和生动的细节描写，既通俗自然又十分含蓄地表达了自己的悲惨命运，引起人们对弱女子的无限同情和对悍夫恶姑的异常憎恨。&lt;/p&gt;
&lt;h2 id=&#34;7-惜黄花慢孤雁&#34;&gt;7. 【惜黄花慢】孤雁&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;碧尽遥天，但暮霞散绮，碎剪红鲜。听时愁近，望时怕远，孤鸿一个，去向谁边？素霜已冷芦花渚，更休倩、鸥鹭相怜。暗自眠，凤凰纵好，宁是姻缘！&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;凄凉劝你无言。趁一沙半水，且度流年。稻梁初尽，网罗正苦，梦魂易警，几处寒烟。断肠可似婵娟意，寸心里，多少缠绵！夜未闲，倦飞误宿平田。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一日黄昏，将近晚炊时，病中的双卿携着畚箕从打谷场上归来，听见一只孤雁在远方的芦苇丛中无助的哀鸣，她西立而望，呆立半天，联想起自己凄凉的身世，不由潸然泪下。正好给她婆婆看见了，在背后大声呵斥，双卿素来胆小易惊，且久病体虚，被吓得畚箕落地，后来她越发心神不宁，从此又染上了易受惊吓的毛病，情动于中，数日后和泪写成这首词。&lt;/p&gt;
&lt;p&gt;词托咏孤雁，寄意遥深，情悲声苦，凄婉欲绝，实乃自抒身世之感。词中孤雁漂泊无依，分明是女词人自己一生孤苦凄凉的形象概括。作者以怜悯之心关怀着孤雁，似乎可以体会到它的孤独、它的无助，“暮霞散绮”，一只大雁孤独地飞翔于广袤的天际之中，“听时愁近，望时怕远；孤鸿一个，去向谁边？”作者以一颗细腻敏感而善良多情的心设想着孤雁的感受，对孤雁关怀备至，一往情深。作者怕听愁声，又同情孤雁飞得太远。而这孤雁离开最喜欢芦芦花渚，原来是素霜已冷，又不愿成双成对的鸥鹭相怜，虽然凤凰这同伴还不错，却也不可能结成姻缘，此地多留无益。&lt;/p&gt;
&lt;p&gt;尤其下片殷勤寄语，无一不是发自肺腑，仿佛与一位“同是天涯沦落人”的知己共诉衷肠。篇中句句写孤雁，句句不离人。落墨虽在雁，意旨却在人，人雁相通，浑然一体。结语“夜未闲，倦飞误宿平田”，正是女词人明珠暗投，误落田家不幸命运的真实写照。哀哉孤雁，悲哉双卿！下片是先由作者观望孤雁，现在田里也没有野食，猎人又伺机而动，还不如随边便找个“一沙半水”先栖息下来。不过，这孤雁自有它的伤心之处，终究夜半误宿了荒野的平田，饥寒已是无法避免的了。&lt;/p&gt;
&lt;p&gt;如陈廷焯所言：“此词悲怨而忠厚，读竟令人泣数行下。”&lt;/p&gt;
&lt;h2 id=&#34;8-凤凰台上忆吹箫残灯&#34;&gt;8. 【凤凰台上忆吹箫】残灯&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;已暗忘吹，欲明谁剔？向侬无焰如萤。听土阶寒雨，滴破三更。独自恹恹耿耿，难断处、也忒多情。香膏尽，芳心未冷，且伴双卿。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;星星。渐微不动，还望你淹煎，有个花生！胜野塘风乱，摇曳渔灯。辛苦秋蛾散后，人已病、病减何曾？相看久，朦胧成睡，睡去空惊。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是有一次，因劝谏丈夫，反给丈夫禁闭在厨房里，只有一盏半明不灭的残灯作着她，引起了她的幽怨，写下了这心弦的哀音，人是凄凉，景是凄凉，事是凄凉，词是凄凉，读来让人一掬同情之泪，让人唏嘘不止。&lt;/p&gt;
&lt;p&gt;作者通过对残灯的观察、描绘，创造出凄凉的氛围。夜晚，万籁寂无声，暮色中一盏残灯摇曳闪烁微弱的灯光，孤独凄冷，“独自恹恹耿耿”的残灯，如同灯下柔弱孤寂的作者，“香膏尽，芳心未冷，且伴双卿”，无人陪伴的夜晚，有了残灯的相随，亦可聊以自慰。只是，他们的命运是那么的相似，一个是即将熄灭的残灯，一个是被折磨、被伤害的双卿。看灯，也是在看自己，哀悼残灯的命运，也是在感叹自身的不幸，词中虽没有直言控诉压迫她的恶势力，然而字里行间，都浸透着一个封建社会中受尽侮辱、欺凌的女子的血和泪。&lt;/p&gt;
&lt;p&gt;双卿是善良的，她的感情是细腻的，常常借咏物来抒发自己的感慨。善于运用孤独、衰残、暗淡、凄冷的意象，来抒写绝望的情怀，实为自己不幸的遭遇和悲凉的心境的写照。&lt;/p&gt;
&lt;h2 id=&#34;9-薄幸咏疟&#34;&gt;9. 【薄幸】咏疟&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;依依孤影，浑似梦、凭谁唤醒！受多少、蝶嗔蜂怒，有药难医花症。最忙时，那得功夫，凄凉自整红炉等。总诉尽浓愁，滴干清泪，冤煞娥眉不省。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;去过酉、来先午，偏放却、更深宵永。正千回万转，欲眠仍起，断鸿叫破残阳冷。晚山如镜，小柴扉烟锁，佳人翠袖恹恹病。春归望早，只恐东风未肯。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一天，贺双卿清扫了屋里屋外，洗完一大盆衣服，又喂完鸡猪，刚想坐下来稍事歇息，婆婆又在院子里催她舂谷了，双卿从不敢违抗婆婆的指令，赶紧走到院子里开始舂谷。舂谷的石杵又大又重，她舂了一会儿，已累得汗流浃背，气喘吁吁，只好抱着杵休息片刻。正在这时，周大旺从地里回来。一进门见妻子无力地站在石臼边，抱着石杵一动也不动，便以为是她偷懒怠工，问也不问，就一把把她推倒在石臼旁。石杵正压在了她的腰上，双卿痛得好半天都爬不起来，痛苦屈辱的眼泪还不敢当着丈夫的面流出来。好不容易挣扎着舂完谷，又到了做午饭的时间，双卿来不及喘口气，又去厨房煮粥。粥锅坐在灶上，她则坐在灶坑前添柴烧火。浓烟一熏，加上过度的疲劳，头晕的老毛病又犯了，她只好闭上眼靠在灶台上。就在这工夫，锅里煮着的粥开了，溢出锅沿，弄得灶台上一片狼藉，还有几点热粥溅到贺双卿的脖子上，把她烫醒，睁眼一看，不由得低低地惊叫了一声。婆婆闻声探进头来一看，不禁火冒三丈，又是一顿吼骂。贺双卿早已听惯了她的呵叱，只是埋头清理灶台。杨氏一见媳妇那种对她要理不理的样子，更加气不打一处来。冲上前一把抓住双卿的耳环，用力一扯，把她的耳垂撕裂开来，鲜血流满了肩头。双卿仍然不敢反抗，却默默地咬牙忍住疼痛，擦干鲜血后，照常乖乖地把饭食送给婆婆和丈夫，婆婆和丈夫看都不看她一眼，坐下就大吃大嚼起来。双卿的泪水这才敢默默地流了下来。于是写下这首哀伤欲绝的《薄幸（咏疟）》。作者把自己比作花，把压制她的人比作蝶和蜂。“有药难医花症”，是因为“受多少、蝶嗔蜂怒”。终日无端的“嗔”和“怒”，即使有药可以医治好她的身体上的疾病，也难以医治她心灵上的伤痛。这首词写得很巧妙，借写自己的病，来写封建势力对自己的压迫，含蓄地表达了自己对封建势力的憎恨与控诉。&lt;/p&gt;
&lt;h2 id=&#34;10-一剪梅&#34;&gt;10. 【一剪梅】&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;寒热如潮势未平，病起无言，自扫前庭。琼花魂断碧天愁，推下凄凉，一个双卿。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;夜冷荒鸡懒不鸣，拟雪猜霜，怕雨贪晴。最闲时候妾偏忙，才喜双卿，又怒双卿。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;11-摸鱼儿谢邻女韩西馈食&#34;&gt;11. 【摸鱼儿】谢邻女韩西馈食&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;喜初晴，晚霞西现，寒山烟外青浅。苔纹干处容香履，尖印紫泥犹软。人语乱，忙去倚、柴扉空负深深愿。相思一线，向新月搓圆；穿愁贯恨，珠泪总成串。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;黄昏后，残热犹怜细喘。小窗风射如箭。春红秋白无情艳，一朵似侬难选。重见远，听说道，伤心已受殷勤饯。斜阳刺眼，休更望天涯，天涯只是，几片冷云展。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;她的邻居韩西是她女伴，不识字，却爱双卿的作品，这样的女伴，几乎已是双卿婚后生活的唯一精神寄托，可是不久，韩西就嫁人了。一次，韩西回娘家小住后即将返回婆家，父母为之送行，韩西邀请双卿参加，可双卿疟疾犯了，不能前往，韩西就前去探望，并送去食物。饥寒交迫的双卿非常感动，于是和泪写下了这首《摸鱼儿（谢邻女韩西馈食）》。&lt;/p&gt;
&lt;p&gt;据《西青散记》记载：“邻女韩西，新嫁而归，性颇慧，见双卿独舂汲，恒助之。疟时，坐于床为双卿泣。不识字，然爱双卿书。乞双卿写心经，且教之诵。是时将返其夫家，父母得饯之。召双卿，疟弗能往，韩西亦诸食。乃分其所食自裹之遗双卿。双卿泣为此词，以淡墨细书芦叶。”&lt;/p&gt;
&lt;h2 id=&#34;12-凤凰台上忆吹箫赠邻女韩西&#34;&gt;12. 【凤凰台上忆吹箫】赠邻女韩西&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;寸寸微云，丝丝残照，有无明灭难消。正断魂魂断，闪闪摇摇。望望山山水水，人去去，隐隐迢迢。从今后，酸酸楚楚，只似今宵。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;青遥，问天不应，看小小双卿，袅袅无聊。更见谁谁见，谁痛花娇？谁望欢欢喜喜，偷素粉，写写描描？谁还管，生生世世，夜夜朝朝？&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这首词是为别女友韩西而作，细腻地表现了她内心抑郁的情绪，再现与女友分别使她堕入深渊的情景。巧用叠字抒情写意，堪与词作大家李清照的“寻寻觅觅，冷冷清清，凄凄惨惨戚戚”之句媲美，将双卿后半生的酸楚尽相倾诉。“偷素粉、写写描描。谁还管，生生世世，夜夜朝朝。”这首词，情境哀凄，词义悲苦。用双字二十余叠，丝毫不露牵强痕迹。末尾三句，“谁还管，生生世世，夜夜朝朝”更是余怨无穷，紧紧扣人心弦，令人动容。&lt;/p&gt;
&lt;p&gt;双卿的词，没有华丽词藻，大多采用生活语言，善于将自己的情感融于自然景物中，揭示生活悲剧中所蕴藏的美质，创造出具有高度美学意义的境界。她还善于掌握声调韵律错综复杂的不同节奏，以适应自己思想感情有起伏变化。如《凤凰台上忆吹箫》通篇语言质朴，且巧用叠字，造成回环咏叹的艺术效果，缠绵悱恻，旋律优美，可谓情苦词哀，已达极致，加上连用叠字二十余韵，真可与李易安的《声声慢》相媲美，确是双卿自述境况的凄绝的哀歌。&lt;/p&gt;
&lt;p&gt;清代陈廷焯在《白雨斋词话》评曰：“ 其情哀，其词苦。用双字至二十余叠，亦可谓广大神通矣。易安见之，亦当避席。”&lt;/p&gt;
&lt;h2 id=&#34;13-春从天上来梅花&#34;&gt;13. 【春从天上来】梅花&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;自笑恹恹，费半晌春忙，去省花尖。玉容憔悴，知为谁添？病来分与花嫌。正腊衣催洗，春波冷，素腕愁沾。硬东风、枉寒香一度，新月纤纤。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;多情满天坠粉，偏只累双卿，梦里空拈。与蝶招魂，替莺拭泪，夜深偷诵《楞严》。有伤春佳句，酸和苦，生死俱甜。祝花年，向观音稽首,掣遍灵签。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;处境悲苦，遇人不淑，在这种种折磨下，双卿也只能自我寻求些安慰了，通过读佛经，参拜观音，以求脱离苦海。&lt;/p&gt;
&lt;h2 id=&#34;14-春从天上来饷耕&#34;&gt;14. 【春从天上来】饷耕&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;紫陌春情，漫额裹春纱，自饷春耕。小梅春瘦，细草春明。春田步步春生。记那年春好，向春燕、说破春情。到于今，想春笺春泪，都化春冰。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;怜春痛春春几？被一片春烟，锁住春莺。赠与春侬，递将春你，是侬是你春灵。筭春头春尾，也难筭、春梦春醒。甚春魔，做一场春梦，春误双卿！&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;据说她舅舅是当地的塾师，一说她舅舅是帮塾师打柴、担水的杂役，但无论如何，这都给好学的双卿提供了一个求学的便利条件。每当塾师授课时，双卿就倚于窗下，悉心聆听，铭记在心。三年过去了，双卿学会了读书、写字、吟诗、作文，父母亲认为姑娘家大了，不能再到处乱跑了，便不再让双卿去学馆听课。此时的双卿，已经善诗能文了，可是，双卿虽有卓越的才华，却一直没有引起家人的注意。&lt;/p&gt;
&lt;p&gt;闺中闲暇，双卿即吟诗填词，练字作画。买不起书，她便用自做的精巧的女红，向商贩们换些诗词书籍来读。在诗书的熏陶下，双卿如一枝红杏在农家小院含苞怒放。然而令人叹惋不止的是，双卿18岁时，父亲去世，由叔父作主，以三石谷子的聘礼，被嫁到金坛绡山村周家，从此，双卿便踏上了一条万劫不复的血泪之路。&lt;/p&gt;
&lt;h2 id=&#34;清代第一女词人贺双卿&#34;&gt;“清代第一女词人”贺双卿&lt;/h2&gt;
&lt;p&gt;双卿的丈夫叫周大旺，比双卿大十几岁，是个没有一点文化的佃户樵民，粗俗不堪，生性粗暴，而且嗜赌成性；婆婆杨氏更是刁泼蛮恶，不讲情理。婚后，丈夫和婆婆把双卿当成牛马役使，家中清扫、煮饭、喂鸡、养猪、舂谷之类繁重的劳作都落到双卿的头上。婆婆还经常故意找双卿的茬，稍不顺眼非打即骂。双卿原本身体孱弱，在娘家就很少做这些重活，婚后却要样样从头学起，家里田里两头都要忙，哪里吃得消呢？但慑于婆婆和丈夫的淫威，她只有忍气吞声，独自把苦涩的泪水咽进肚里。在身体与精神的双重折磨下，双卿嫁到周家后不久便患上了严重的疟疾。劳动的艰苦，疾病的煎熬，婚姻的不幸，精神的折磨，心灵的凄楚，种种愁情苦况，一齐折磨着双卿，在这个冷似冰窖令人窒息的家庭中，双卿又无处倾诉，唯凭诗词倾诉衷肠。双卿的诗作，抒发的基本上是对个人生活不幸的感叹，浸透着浓郁的压抑情绪和伤感的情调，同时，她个人的悲剧，也折射出当时社会的阴影，使人们看到了封建时代下层社会妇女的苦难，听见了她们痛苦的悲吟，深为她们的才华被埋没而悲哀和不平。&lt;/p&gt;
&lt;p&gt;丈夫和婆婆的欺凌，日日消损着清代第一女词人的花颜玉容，却磨不尽她的锦思花情。从娘家带来的纸用尽了，双卿便在芦叶、竹叶、桂叶和破布残片上写；笔磨秃了，她就用炭棒和白粉代替。婆婆多次淫威大发，将双卿的笔折断，诗稿烧毁，可无论如何也阻挡不了双卿写诗的激情。双卿不在乎留下什么传世之作，甚至有意不想让诗作留存于世，她写诗、作词的唯一目的，只是想用它来宣泄悲郁、点染生活，为自己枯萎的生命添一抹亮丽的色彩。不幸的遭际，使双卿常常想起婚前的美好时光，虽然清苦，可拥有人世间最宝贵的亲情，内心是温暖而平静的，美好的时光如流水般逝去，再也无法倒流，双卿唯有靠这点点回忆来慰藉着饱经创伤的心灵。&lt;/p&gt;
&lt;p&gt;既然无法反抗，也就只有加倍地恭顺了，或许这样可以一点减少痛苦。据清代史震林（1692~1778年）《西青散记》记载，双卿到婆家后不长时间，便久病不愈，在临终前的日子里，“事舅姑愈谨，邻里称其孝。夫性益暴，善承其喜怒，弗敢稍忤。”（卷四第46页）就这样，大约于雍正末年或乾隆初年，一代才貌双全的农家女词人，最终在肉体与精神的双重折磨下，花颜凋落，含恨离开人世，留下一段千古遗憾，让后人叹惋不已！&lt;/p&gt;
&lt;h2 id=&#34;易之言&#34;&gt;易之言&lt;/h2&gt;
&lt;p&gt;易之见此人此事，为《行香子-寄贺双卿》。其词曰：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;丝丝柳絮，点点残雨。正春初，愁云乱舞。水田夕下，秋碧楚楚。纵月儿长，日儿短，双卿苦。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;豆蔻妙龄，玉带华年，偏风刀霜剑无诉。幽如白兰，缘命早枯。只怜卿长，叹卿短，代卿哭。&lt;/em&gt;&lt;/p&gt;
- https://guyueshui.github.io/yukynn/posts/%E9%9B%AA%E5%8E%8B%E8%BD%A9%E9%9B%86/ - </description>
        </item>
    
    
  </channel>
</rss> 