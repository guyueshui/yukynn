<?xml-stylesheet href="/rss.xsl" type="text/xsl"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Yukynnの窝</title><link>https://example.com/</link><description>Recent content on Yukynnの窝</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 12 Mar 2020 18:58:04 +0800</lastBuildDate><atom:link href="https://example.com/index.xml" rel="self" type="application/rss+xml"/><item><title>B</title><link>https://example.com/posts/b/</link><pubDate>Thu, 12 Mar 2020 18:58:04 +0800</pubDate><guid>https://example.com/posts/b/</guid><description>Yukynnの窝 https://example.com/posts/b/ -&lt;p>Hello this is b test.&lt;/p>
&lt;p>The remaining content of your post.&lt;/p>- https://example.com/posts/b/ -</description></item><item><title>New About</title><link>https://example.com/about/</link><pubDate>Thu, 12 Mar 2020 18:15:17 +0800</pubDate><guid>https://example.com/about/</guid><description>Yukynnの窝 https://example.com/about/ -&lt;p>Hi, this is Yukynn!&lt;/p>
- https://example.com/about/ -</description></item><item><title>测试</title><link>https://example.com/posts/second/</link><pubDate>Wed, 11 Mar 2020 21:41:15 +0800</pubDate><guid>https://example.com/posts/second/</guid><description>Yukynnの窝 https://example.com/posts/second/ -&lt;p>可以在这里添加描述。&lt;/p>
&lt;p>The remaining content of your post.&lt;/p>- https://example.com/posts/second/ -</description></item><item><title>Hello World</title><link>https://example.com/posts/hello-world/</link><pubDate>Wed, 11 Mar 2020 20:50:39 +0800</pubDate><guid>https://example.com/posts/hello-world/</guid><description>Yukynnの窝 https://example.com/posts/hello-world/ -&lt;p>Cut out summary from your post content here.&lt;/p>
&lt;p>The remaining content of your post.&lt;/p>
&lt;p>This is yukynn&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>, who loves yychi&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>!&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>The english name of 玉静。&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>The english name of 氷。&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div>- https://example.com/posts/hello-world/ -</description></item><item><title>中文文本测试</title><link>https://example.com/posts/chinese/</link><pubDate>Thu, 14 Nov 2019 11:25:05 -0400</pubDate><guid>https://example.com/posts/chinese/</guid><description>Yukynnの窝 https://example.com/posts/chinese/ -&lt;p>　　这样看来， 邓拓在不经意间这样说过，越是没有本领的就越加自命不凡。这不禁令我深思。 我们不得不面对一个非常尴尬的事实，那就是， 一般来说， 所谓中午吃什么，关键是中午吃什么需要如何写。 伏尔泰说过一句富有哲理的话，坚持意志伟大的事业需要始终不渝的精神。这启发了我， 那么， 对我个人而言，中午吃什么不仅仅是一个重大的事件，还可能会改变我的人生。 这样看来， 我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。 一般来讲，我们都必须务必慎重的考虑考虑。 黑格尔说过一句富有哲理的话，只有永远躺在泥坑里的人，才不会再掉进坑里。这启发了我， 我们不得不面对一个非常尴尬的事实，那就是， 既然如何， 在这种困难的抉择下，本人思来想去，寝食难安。&lt;/p>
&lt;p>　　我认为， 而这些并不是完全重要，更加重要的问题是， 了解清楚中午吃什么到底是一种怎么样的存在，是解决一切问题的关键。 中午吃什么因何而发生？ 而这些并不是完全重要，更加重要的问题是， 卢梭在不经意间这样说过，浪费时间是一桩大罪过。这启发了我， 既然如此， 从这个角度来看， 歌德在不经意间这样说过，意志坚强的人能把世界放在手中像泥块一样任意揉捏。我希望诸位也能好好地体会这句话。 我认为， 我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。 本人也是经过了深思熟虑，在每个日日夜夜思考这个问题。 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 莎士比亚在不经意间这样说过，人的一生是短的，但如果卑劣地过这一生，就太长了。带着这句话，我们还要更加慎重的审视这个问题： 带着这些问题，我们来审视一下中午吃什么。 中午吃什么因何而发生？ 我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。 布尔沃曾经说过，要掌握书，莫被书掌握；要为生而读，莫为读而生。这似乎解答了我的疑惑。 而这些并不是完全重要，更加重要的问题是， 生活中，若中午吃什么出现了，我们就不得不考虑它出现了的事实。 本人也是经过了深思熟虑，在每个日日夜夜思考这个问题。 带着这些问题，我们来审视一下中午吃什么。 生活中，若中午吃什么出现了，我们就不得不考虑它出现了的事实。 我认为， 一般来说， 中午吃什么，到底应该如何实现。 我们不得不面对一个非常尴尬的事实，那就是， 所谓中午吃什么，关键是中午吃什么需要如何写。 我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。 现在，解决中午吃什么的问题，是非常非常重要的。&lt;/p>
&lt;p>　　我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。 可是，即使是这样，中午吃什么的出现仍然代表了一定的意义。 带着这些问题，我们来审视一下中午吃什么。 本人也是经过了深思熟虑，在每个日日夜夜思考这个问题。 我认为， 问题的关键究竟为何？ 非洲曾经提到过，最灵繁的人也看不见自己的背脊。这启发了我， 易卜生说过一句富有哲理的话，伟大的事业，需要决心，能力，组织和责任感。这似乎解答了我的疑惑。 一般来说， 在这种困难的抉择下，本人思来想去，寝食难安。 中午吃什么，到底应该如何实现。 经过上述讨论， 我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。 中午吃什么因何而发生？
带着这些问题，我们来审视一下中午吃什么。 对我个人而言，中午吃什么不仅仅是一个重大的事件，还可能会改变我的人生。&lt;/p>
- https://example.com/posts/chinese/ -</description></item><item><title>Useful Tricks</title><link>https://example.com/posts/tricks/</link><pubDate>Thu, 17 Jan 2019 22:19:05 +0000</pubDate><guid>https://example.com/posts/tricks/</guid><description>Yukynnの窝 https://example.com/posts/tricks/ -&lt;pre tabindex="0">&lt;code> __ __ __ __ ____ ___
/\ \ /\ \ /\ \ __ /\ \ /\ _`\ /\_ \
\ `\`\\/&amp;#39;/__ __ ___\ \ \___ /\_\\ \/ ____ \ \ \L\ \//\ \ ___ __
`\ `\ /&amp;#39;/\ \/\ \ /&amp;#39;___\ \ _ `\/\ \\/ /&amp;#39;,__\ \ \ _ &amp;lt;&amp;#39;\ \ \ / __`\ /&amp;#39;_ `\
`\ \ \\ \ \_\ \/\ \__/\ \ \ \ \ \ \ /\__, `\ \ \ \L\ \\_\ \_/\ \L\ \/\ \L\ \
\ \_\\/`____ \ \____\\ \_\ \_\ \_\ \/\____/ \ \____//\____\ \____/\ \____ \
\/_/ `/___/&amp;gt; \/____/ \/_/\/_/\/_/ \/___/ \/___/ \/____/\/___/ \/___L\ \
/\___/ /\____/
\/__/ \_/__/ &amp;#39;`
&lt;/code>&lt;/pre>&lt;p>此页内容多为软件使用技巧，绝大部分内容来自互联网，如有侵权，请与&lt;a href="mailto:guyueshui002@gmail.com">我&lt;/a>联系。也有部分内容系自己使用软件所得的一些经验，仅供参考。&lt;/p>
&lt;h2 id="ffmepg">FFmepg&lt;/h2>
&lt;h3 id="转视频为-gif">转视频为 gif&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ffmpeg -i input.mkv out.gif
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>又：加速播放。假设原视频 60 fps，输出降到 30 fps，丢掉一半的帧。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>ffmpeg -r &lt;span style="color:#d19a66">60&lt;/span> -i input.mkv -r &lt;span style="color:#d19a66">30&lt;/span> out.gif
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>又：不想丢帧。将输入扩大一倍，输出保留原样。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>ffmpeg -r &lt;span style="color:#d19a66">120&lt;/span> -i input.mkv -r &lt;span style="color:#d19a66">60&lt;/span> out.gif
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>又：不想全转。从视频的第 2 秒开始，截取 3 秒转化为 gif。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">## 从视频中第二秒开始，截取时长为 3 秒的片段转化为 gif&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffmpeg -t &lt;span style="color:#d19a66">3&lt;/span> -ss 00:00:02 -i input.mkv out-clip.gif
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>又：控制转化质量。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">## 默认转化是中等质量模式，若要转化出高质量的 gif，可以修改比特率&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffmpeg -i input.mkv -b 2048k out.gif
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="vob-转-mp4">VOB 转 MP4&lt;/h3>
&lt;p>cf. &lt;a href="http://www.ruhuamtv.com/thread-9782-1-1.html">http://www.ruhuamtv.com/thread-9782-1-1.html&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ffmpeg -i 源视频.vob -c:v libx264 -vf yadif -crf &lt;span style="color:#d19a66">18&lt;/span> 目标视频.mp4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>又：合并 VOB 文件。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cat VTS_01_1.VOB VTS_01_2.VOB | ffmpeg -y -i - -fflags genpts -vcodec copy -acodec copy ../output.VOB
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>又：合并 mp4 文件。
see: &lt;a href="https://www.tais3.com/others/983.html">https://www.tais3.com/others/983.html&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#! /bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>&lt;span style="color:#7f848e"># 将 mp4 文件封装为 ts 格式&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffmpeg -i a1.mp4 -vcodec copy -acodec copy -vbsf h264_mp4toannexb 1.ts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffmpeg -i a2.mp4 -vcodec copy -acodec copy -vbsf h264_mp4toannexb 2.ts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffmpeg -i a3.mp4 -vcodec copy -acodec copy -vbsf h264_mp4toannexb 3.ts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffmpeg -i a4.mp4 -vcodec copy -acodec copy -vbsf h264_mp4toannexb 4.ts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 拼接 ts 并导出最终 mp4 文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffmpeg -i &lt;span style="color:#98c379">&amp;#34;concat:1.ts|2.ts|3.ts|4.ts&amp;#34;&lt;/span> -acodec copy -vcodec copy -absf aac_adtstoasc output.mp4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 删除过程中生成的 ts 文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rm *.ts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考：&lt;a href="https://www.tais3.com/others/983.html">FFMPEG 合并视频文件（无损）&lt;/a>&lt;/p>
&lt;h3 id="ts-转-mp4">TS 转 MP4&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ffmpeg -y -i your_file.ts -vcodec copy -acodec copy -map 0:v -map 0:a your_file.mp4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>cf.&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://www.reddit.com/r/ffmpeg/comments/ggmjep/comment/fq2m1ux/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3">https://www.reddit.com/r/ffmpeg/comments/ggmjep/comment/fq2m1ux/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://askubuntu.com/a/716457">https://askubuntu.com/a/716457&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>分辨率、码率、帧率相关介绍，及相关压缩方法：&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://blog.csdn.net/weixin_30536861/article/details/114496746">https://blog.csdn.net/weixin_30536861/article/details/114496746&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/255042580">https://zhuanlan.zhihu.com/p/255042580&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>写给新手的指令：https://gnu-linux.readthedocs.io/zh/latest/Chapter04/00_ffmpeg.basic.html&lt;/p>
&lt;hr>
&lt;h2 id="imagemagick">ImageMagick&lt;/h2>
&lt;h3 id="图片转换">图片转换&lt;/h3>
&lt;p>转换图片为指定分辨率。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>convert -resize 1920x1080 src.jpg dst.jpg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>又：按百分比转换大小。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>convert -resize 50%x50% src.jpg dst.jpg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>又：忽略原始宽高比。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>convert -resize 300x300! src.jpg dst.jpg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>又：多张图片合成 gif。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>magick DSC_52&lt;span style="color:#56b6c2">{&lt;/span>01..09&lt;span style="color:#56b6c2">}&lt;/span>.JPG out.gif
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>magick -delay &lt;span style="color:#d19a66">10&lt;/span> *.jpg out.gif &lt;span style="color:#7f848e"># 指定每张持续 10ms&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>又：更改分辨率。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mogrify -resize 50%x50% *.jpg &lt;span style="color:#7f848e"># 所有 jpg 缩放至 50%，不加百分号默认单位 px（像素）&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>又，裁切 gif。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>magick c.gif -coalesce -repage 0x0 -crop 600x600+175+0 +repage output.gif
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>convert input.gif -coalesce -repage 0x0 -crop WxH+X+Y +repage output.gif
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Animated gifs are often optimised to save space, but imagemagick doesn&amp;rsquo;t seem to consider this when applying the crop command and treats each frame individually. -coalesce rebuilds the full frames.&lt;/li>
&lt;li>Other commands will take into consideration the offset information supplied in the original gif, so you need to force that to be reset with -repage 0x0.&lt;/li>
&lt;li>The crop itself is straightforward, with width, height, x offset and y offset supplied respectively. For example, a crop 40 wide and 30 high at an x offset of 50 = 40x30+50+0.&lt;/li>
&lt;li>Crop does not remove the canvas that it snipped from the image. Applying +repage after the crop will do this.&lt;/li>
&lt;/ul>
&lt;p>cf. &lt;a href="https://stackoverflow.com/a/14036766">https://stackoverflow.com/a/14036766&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="shell">Shell&lt;/h2>
&lt;h3 id="行内操作">行内操作&lt;/h3>
&lt;ul>
&lt;li>&lt;code>^a&lt;/code>: jump to BOL&lt;/li>
&lt;li>&lt;code>^e&lt;/code>: jump to EOL&lt;/li>
&lt;li>&lt;code>^u&lt;/code>: delete the line&lt;/li>
&lt;li>&lt;code>^k&lt;/code>: delete to EOL&lt;/li>
&lt;li>&lt;code>^w&lt;/code>: delete a word forward&lt;/li>
&lt;li>&lt;code>alt+f&lt;/code>: jump a word forward&lt;/li>
&lt;li>&lt;code>alt+b&lt;/code>: jump a word backward&lt;/li>
&lt;li>&lt;code>^r&lt;/code>: search history&lt;/li>
&lt;li>&lt;code>alt+.&lt;/code>: complete second parameter&lt;/li>
&lt;/ul>
&lt;h3 id="任务控制">任务控制&lt;/h3>
&lt;ol>
&lt;li>执行&lt;code>command&lt;/code>&lt;/li>
&lt;li>按&lt;code>^z&lt;/code>挂起当前 job&lt;/li>
&lt;li>按&lt;code>bg&lt;/code>后台继续该 job&lt;/li>
&lt;li>按&lt;code>fg&lt;/code>召回前台&lt;/li>
&lt;/ol>
&lt;h3 id="后台运行命令">后台运行命令&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">command&lt;/span> &amp;amp;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者如果你不想看到任何输出，使用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">command&lt;/span> &amp;amp;&amp;gt; /dev/null &amp;amp;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>如此你可以继续使用当前 shell&lt;/li>
&lt;li>使用&lt;code>bg&lt;/code>查看是否有任务在后台运行&lt;/li>
&lt;li>使用&lt;code>jobs&lt;/code>查看后台任务&lt;/li>
&lt;li>使用&lt;code>fg&lt;/code>将任务召回前台&lt;/li>
&lt;li>不能退出 shell，否则进程会被杀掉&lt;/li>
&lt;li>&lt;strong>使用&lt;code>disown&lt;/code>丢掉进程，可以退出 shell&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>又：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>nohup &lt;span style="color:#e5c07b">command&lt;/span> &amp;amp;&amp;gt; /dev/null &amp;amp;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>等价于以上的操作。单纯的&lt;code>nohup command&lt;/code>会在当前目录创建一个隐藏文件以写入命令的输出。以上命令将程序的输出重定向至比特桶丢弃。&lt;/p>
&lt;h3 id="同时输出到-console-和文件">同时输出到 console 和文件&lt;/h3>
&lt;p>将命令输出重定向到文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>SomeCommand &amp;gt; SomeFile.txt &lt;span style="color:#7f848e"># overwrite&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SomeCommand &amp;gt;&amp;gt; SomeFile.txt &lt;span style="color:#7f848e"># append&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将命令输出 (stdout) 及报错 (stderr) 重定向到文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>SomeCommand &amp;amp;&amp;gt; SomeFile.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SomeCommand &amp;amp;&amp;gt;&amp;gt; SomeFile.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>同时输出到 console 和文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>SomeCommand 2&amp;gt;&amp;amp;&lt;span style="color:#d19a66">1&lt;/span> | tee SomeFile.txt &lt;span style="color:#7f848e"># overwrite&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SomeCommand 2&amp;gt;&amp;amp;&lt;span style="color:#d19a66">1&lt;/span> | tee -a SomeFile.txt &lt;span style="color:#7f848e"># append&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code> || visible in terminal || visible in file || existing
Syntax || StdOut | StdErr || StdOut | StdErr || file
==========++==========+==========++==========+==========++===========
&amp;gt; || no | yes || yes | no || overwrite
&amp;gt;&amp;gt; || no | yes || yes | no || append
|| | || | ||
2&amp;gt; || yes | no || no | yes || overwrite
2&amp;gt;&amp;gt; || yes | no || no | yes || append
|| | || | ||
&amp;amp;&amp;gt; || no | no || yes | yes || overwrite
&amp;amp;&amp;gt;&amp;gt; || no | no || yes | yes || append
|| | || | ||
| tee || yes | yes || yes | no || overwrite
| tee -a || yes | yes || yes | no || append
|| | || | ||
n.e. (*) || yes | yes || no | yes || overwrite
n.e. (*) || yes | yes || no | yes || append
|| | || | ||
|&amp;amp; tee || yes | yes || yes | yes || overwrite
|&amp;amp; tee -a || yes | yes || yes | yes || append
&lt;/code>&lt;/pre>&lt;p>Ref:&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://askubuntu.com/questions/420981/how-do-i-save-terminal-output-to-a-file">https://askubuntu.com/questions/420981/how-do-i-save-terminal-output-to-a-file&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.gnu.org/software/bash/manual/bash.html#Redirections">https://www.gnu.org/software/bash/manual/bash.html#Redirections&lt;/a>&lt;/li>
&lt;/ol>
&lt;h3 id="从系统中踢出某个用户">从系统中踢出某个用户&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># See the pid of the user&amp;#39;s login process.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ who -u
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>yychi tty1 2020-02-19 21:06 旧 &lt;span style="color:#d19a66">460&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Let him know he will be kick off.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ &lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#98c379">&amp;#34;You&amp;#39;ll be kick off by system administrator.&amp;#34;&lt;/span> | write yychi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Kick off.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ &lt;span style="color:#e5c07b">kill&lt;/span> -9 &lt;span style="color:#d19a66">460&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Done.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ref: &lt;a href="https://www.putorius.net/kick-user-off-linux-system.html">https://www.putorius.net/kick-user-off-linux-system.html&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="command-find">Command &lt;code>find&lt;/code>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ find --help
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: find &lt;span style="color:#56b6c2">[&lt;/span>-H&lt;span style="color:#56b6c2">]&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>-L&lt;span style="color:#56b6c2">]&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>-P&lt;span style="color:#56b6c2">]&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>-Olevel&lt;span style="color:#56b6c2">]&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>-D help|tree|search|stat|rates|opt|exec&lt;span style="color:#56b6c2">]&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>path...&lt;span style="color:#56b6c2">]&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>expression&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>前面的选项不常用，初级使用只需掌握&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>find &lt;span style="color:#56b6c2">[&lt;/span>path...&lt;span style="color:#56b6c2">]&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>expression&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>path&lt;/code> - search path&lt;/li>
&lt;li>&lt;code>expression&lt;/code> - expands to &lt;code>-options [-print -exec -ok]&lt;/code>
&lt;ul>
&lt;li>&lt;code>-options&lt;/code>: 指定 find 常用选项&lt;/li>
&lt;li>&lt;code>-print&lt;/code>: 将匹配到的文件写入标准输出 [默认]&lt;/li>
&lt;li>&lt;code>-exec&lt;/code>: 在匹配到的文件上执行一串命令。格式为&lt;code>&amp;lt;command&amp;gt; {} \;&lt;/code>，注意 {} 和 ; 之间的空格。
&lt;ul>
&lt;li>&lt;code>find . -size 0 -exec rm {} \;&lt;/code> - 删除当前目录下 size 为 0 的文件&lt;/li>
&lt;li>&lt;code>rm -i $(find . -size 0)&lt;/code> - 同上&lt;/li>
&lt;li>&lt;code>find . -size 0 | xargs rm -f &amp;amp;&lt;/code> - 同上&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>-ok&lt;/code>: 同上，执行命令前会询问&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>常用选项&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>name - 按照文件名查找
&lt;ul>
&lt;li>&lt;code>find &amp;lt;dir&amp;gt; -name &amp;quot;*.cpp&amp;quot;&lt;/code>: 在目录 dir 下查找后缀为 cpp 的文件&lt;/li>
&lt;li>&lt;code>-name&lt;/code>默认不支持正则表达式，顶多支持通配符&lt;code>*&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>perm - 按照文件权限查找&lt;/li>
&lt;li>user - 按照文件所有者查找&lt;/li>
&lt;li>group - 按照文件所有组查找&lt;/li>
&lt;li>type - 按照文件类型查找&lt;/li>
&lt;li>size - 按照文件大小查找&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>正则表达式&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>find path -regex &lt;span style="color:#98c379">&amp;#34;&amp;lt;regex&amp;gt;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>但是默认的正则表达式引擎我也不知道是啥，反正不解析我习惯的那种正则语法。故使用：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>find . -regextype posix-extended -regex &lt;span style="color:#98c379">&amp;#34;.*\.(log|aux|blg)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>上述命令找出当前文件夹及子文件夹所有后缀名为&lt;code>log&lt;/code>,&lt;code>aux&lt;/code>,&lt;code>blg&lt;/code>的文件。&lt;/p>
&lt;p>&lt;strong>几个例子&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>find . -name &amp;quot;*name*&amp;quot;&lt;/code> - 找出当前文件夹文件名包含“name”的文件&lt;/li>
&lt;li>&lt;code>find . ! -type d -print&lt;/code> - 在当前目录查找非目录文件&lt;/li>
&lt;li>&lt;code>find . -newer file1 ! file2&lt;/code> - 查找比 file1 新但比 file2 旧的文件&lt;/li>
&lt;li>&lt;code>find -type d -empty | xargs -n 1 rmdir&lt;/code> - 批量删除当前目录下的空文件夹&lt;/li>
&lt;li>&lt;code>find -tyle l -exec ls -l {} +&lt;/code> - 找出当前文件夹下损坏的软连接&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="command-grep">Command &lt;code>grep&lt;/code>&lt;/h2>
&lt;p>最基本用法：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 查找 somefile 中匹配到 something 的行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ grep &lt;span style="color:#98c379">&amp;#34;something&amp;#34;&lt;/span> somefile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 定位 something 所在的行并将接下来的 3 行一并输出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ grep &lt;span style="color:#98c379">&amp;#34;something&amp;#34;&lt;/span> somefile -A &lt;span style="color:#d19a66">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 定位 something 所在的行并将之前的 3 行一并输出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ grep &lt;span style="color:#98c379">&amp;#34;something&amp;#34;&lt;/span> somefile -B &lt;span style="color:#d19a66">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 定位 something 所在的行并将上下 3 行一并输出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ grep &lt;span style="color:#98c379">&amp;#34;something&amp;#34;&lt;/span> somefile -C &lt;span style="color:#d19a66">3&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>使用正则表达式&lt;/strong>&lt;/p>
&lt;p>&lt;code>grep&lt;/code>支持三种正则：basic (BRE), extend (ERE), perl (PCRE). 不同的&lt;code>grep&lt;/code>实现方式不同，详见手册。一般 extend 最为常用，语法为&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 在 somefile 中查找包含 his 或者 her 的行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ grep -E &lt;span style="color:#98c379">&amp;#34;his|her&amp;#34;&lt;/span> somefile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ref:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://linux.cn/article-6941-1.html">grep 命令系列：grep 中的正则表达式&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="command-xargs">Command &lt;code>xargs&lt;/code>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ whatis xargs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>xargs &lt;span style="color:#56b6c2">(&lt;/span>1&lt;span style="color:#56b6c2">)&lt;/span> - build and execute &lt;span style="color:#e5c07b">command&lt;/span> lines from standard input
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ref:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://c.biancheng.net/linux/xargs.html">xargs 命令：一个给其他命令传递参数的过滤器&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="command-sed">Command &lt;code>sed&lt;/code>&lt;/h2>
&lt;hr>
&lt;h2 id="command-cut">Command &lt;code>cut&lt;/code>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ whatis cut
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cut &lt;span style="color:#56b6c2">(&lt;/span>1&lt;span style="color:#56b6c2">)&lt;/span> - remove sections from each line of files
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>基本用法：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 以：为分隔符分割每行，并选择第 1,2,4 列输出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cut -d: -f1,2,4 /etc/passwd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root:x:0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bin:x:1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>daemon:x:2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mail:x:12
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ftp:x:11
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http:x:33
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nobody:x:65534
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dbus:x:81
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="git">Git&lt;/h2>
&lt;p>&lt;strong>创建别名&lt;/strong>&lt;/p>
&lt;p>使用 &lt;code>git log&lt;/code> 查看提交历史，但是输出冗杂。通常使用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>git log --oneline --abbrev-commit --all --graph --decoreate --color
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>来获得更美观易读的输出。但是每次输入这么多肯定很烦人，使用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>git config --global alias.graph &lt;span style="color:#98c379">&amp;#34;log --graph --oneline --decorate=short&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>增加一个全局别名，这个别名对于任何地方的 &lt;code>git&lt;/code> 都适用。如此一来，键入 &lt;code>git graph&lt;/code> 会等效于&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git log --graph --oneline --decorate&lt;span style="color:#56b6c2">=&lt;/span>short
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>样例输出：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git graph
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* 36f2d65 &lt;span style="color:#56b6c2">(&lt;/span>HEAD -&amp;gt; master, origin/master, origin/HEAD&lt;span style="color:#56b6c2">)&lt;/span> Forget it
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* 9b4a6d7 Update ref list
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* 3931d4d Using relative path &lt;span style="color:#c678dd">for&lt;/span> image
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* ba18821 Upload pics
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* ceca69a fixed reference
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* be15df2 fixed picture address
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* 97a36f3 Initial commit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>忽略已经添加的文件&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git rm --cached &amp;lt;somefiles&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>推送本地分支到远程&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 远程分支如果不存在，则自动创建。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git push origin &amp;lt;local_brach&amp;gt;:&amp;lt;remote_branch&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>拉取远程分支到本地&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 从远程分支切换（并创建，如果不存在）本地分支&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git checkout -b &amp;lt;local_branch&amp;gt; origin/&amp;lt;remote_branch&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 另：取回远程分支并创建对应的本地分支，不换自动切换到该分支&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git fetch origin &amp;lt;remote_brach&amp;gt;:&amp;lt;local_branch&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>删除 commit 历史&lt;/strong>&lt;/p>
&lt;p>如果不小心将隐私信息推送至远程仓库（如 github），那么仅仅删除再更新再推送到远程仓库覆盖是不够的，别人还是可以通过你的 commit 历史查到你所做的更改，所以这种情况下必须删除之前所有的 commit history. 大致思路是创建一个孤立分支，然后重新添加文件，再删除 master 分支，将新建的分支重命名为 master，再推送到远程强制覆盖 &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Check out to a temporary branch:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git checkout --orphan TEMP_BRANCH
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Add all the files:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git add -A
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Commit the changes:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git commit -am &lt;span style="color:#98c379">&amp;#34;Initial commit&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Delete the old branch:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git branch -D master
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Rename the temporary branch to master:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git branch -m master
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Finally, force update to our repository:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git push -f origin master
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>合并某个文件到当前分支&lt;/strong>&lt;/p>
&lt;p>例如当前在 master 分支，希望合并某个分支 dev 的某个或多个文件到当前分支：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git checkout dev file1 file2 ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>但是上述做法会强行覆盖当前分支的文件，没有冲突处理，更安全的做法是先从当前分支新建分支 master_temp，然后在 master_temp 中 checkout，最后再将 master_temp 分支 merge 到 master 分支：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Create a branch based on master&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git checkout -b master_temp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Chechkout file1 from dev to master_temp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git checkout dev file1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git commit -m &lt;span style="color:#98c379">&amp;#34;checkout file1 from dev&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Switch to master and merge, then delete&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git checkout master
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git merge master_temp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git branch -d master_temp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ref: &lt;a href="https://segmentfault.com/a/1190000008360855">https://segmentfault.com/a/1190000008360855&lt;/a>&lt;/p>
&lt;p>&lt;strong>Git merge&lt;/strong>&lt;/p>
&lt;p>当你觉得很多时候对于一个命令的很多子命令或者选项不是很清晰，而且查了忘，忘了查，那多半是你不理解它的工作机制。或者说它对你来说不是那么自然易懂，这个时候就需要深入以下，了解以下它的基本原理，帮助自己理解，以便记忆。&lt;/p>
&lt;p>&lt;code>git merge&lt;/code>就是如此，你要知道 merge 的含义是什么？它其实就是在被 merge 的分支上重现要 merge 的 commits. 比如说：&lt;/p>
&lt;pre tabindex="0">&lt;code>a---b---c---d---e (master)
\
`--A---B---C (dev)
&lt;/code>&lt;/pre>&lt;p>你当前在 master 分支的 e 节点，你要 merge dev 分支。其实就是将 A、B、C 三个 commit 在 master 分支上重现，仿佛 master 分支上曾经也做过这些改动。那么冲突的来源就是你在两个分支中，对同一个文件作了不同的改动，如何解决不言而喻。&lt;/p>
&lt;p>小朋友，你是否有很多？&lt;/p>
&lt;p>Q: 我想只重现 B 节点怎么办？&lt;!-- raw HTML omitted -->
A: &lt;code>git checkout master &amp;amp;&amp;amp; git cherry-pick 62ecb3&lt;/code>，这里&lt;code>62ecb3&lt;/code>是节点 B 的 commit 标识。&lt;/p>
&lt;p>Q: 我想重现 A-B，但不要 C 怎么办？&lt;!-- raw HTML omitted -->
A: &lt;code>git checkout -b newbranch 62ecb3 &amp;amp;&amp;amp; git rebase --onto master 76cada^&lt;/code>，这里&lt;code>76cada&lt;/code>是 A 节点的 commit 标识。先基于 B 创建一个分支，这个分支包含了 A 节点的改动，然后 rebase 到 master 上去，结果就是 A 和 B 重现在 master 分支上。&lt;/p>
&lt;p>Ref:&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://stackoverflow.com/questions/161813/how-to-resolve-merge-conflicts-in-git">https://stackoverflow.com/questions/161813/how-to-resolve-merge-conflicts-in-git&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.devroom.io/2010/06/10/cherry-picking-specific-commits-from-another-branch/">Cherry-Picking specific commits from another branch&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Fork 之后如何同步 fork 源的更新&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># see remote status&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git remote -v
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># add upstream if not exist one&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git remote add upstream https://github.com/&amp;lt;origin_owner&amp;gt;/&amp;lt;origin_repo&amp;gt;.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git remote -v
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>从上游仓库 fetch 分支和提交点，提交给本地 master，并会被存储在一个本地分支 upstream/master&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git fetch upstream
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>切换到任意分支，merge 已经 fetch 的分支即可：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git checkout somebrach
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git merge upstream/master
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>see: &lt;a href="https://www.zhihu.com/question/28676261">https://www.zhihu.com/question/28676261&lt;/a>&lt;/p>
&lt;p>Ref:&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://docs.github.com/en/github/collaborating-with-issues-and-pull-requests/configuring-a-remote-for-a-fork">Configureing a remote for a fork&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.github.com/en/github/collaborating-with-issues-and-pull-requests/syncing-a-fork">Syncing a fork&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>从另一个分支检出某个文件并重命名&lt;/strong>&lt;/p>
&lt;p>有时候开了一个孤立分支，但是想参考其他分支的代码，而当前分支又有同名文件，此时就需要从其他分支检出文件并重命名。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># show the content of a.cpp in specific commit HEAD^&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git show HEAD^:a.cpp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># that&amp;#39;s done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git show HEAD^:a.cpp &amp;gt; b.cpp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ref: search &amp;ldquo;git-checkout older revision of a file under a new name&amp;rdquo; in stack overflow&lt;/p>
&lt;p>&lt;strong>查看已被跟踪的文件&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git ls-files
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ref: search &amp;ldquo;how can i make git show a list of the files that are being tracked&amp;rdquo; in stack overflow&lt;/p>
&lt;p>&lt;strong>submodule&lt;/strong>&lt;/p>
&lt;p>git submodule 本质上是指向一个其他仓库的链接，默认 clone 不会将 submodule 对应的仓库克隆下来。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># help&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git submodule --help
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 添加 submodule&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 1. 进入目标子文件夹&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git submodule add https://github.com/imtianx/liba.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 更新 submodule&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">cd&lt;/span> xxx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git pull
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git submodule update --recursive
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 在主目录下更新 submodule liba&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git submodule update --remote liba
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 删除 submodule&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vim .gitmodules &lt;span style="color:#7f848e"># 删除相应条目&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vim .git/config &lt;span style="color:#7f848e"># 删除相应条目&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rm -rf .git/modules/liba &lt;span style="color:#7f848e"># 删除对应的 git 文件夹&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 在克隆时连同 submodule 一并克隆&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https://github.com/imtianx/MainProject.git --recursive
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># is equivalent to&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https://github.com/imtianx/MainProject.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git submodule init
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git submodule update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>一般地，当某仓库中包含 submodule ./dir1 时，如果你只提交了 dir1 的内容，那么当前仓库是不会用上最新版本的 dir1 的。这在远程仓库中尤为显著。我的博客文件夹 BlogHugo 中包含了 themes/even 的 submodule, 每当我在 even 中改完样式推送到远端后（这里我 BlogHugo 仓库没有任何修改），发现 build 出来的网站压根没有使用最新的 submodule 里面的内容。究其原因，其实是父仓库默认会跟踪 submodule 的一个版本号。如果不在父仓库中显示更新要跟踪的版本号，则父仓库一直会跟踪之前的版本号。这是合理的，因为父子仓库独立开发，为了避免子仓库（submodule）的频繁提交对父仓库的构建产生影响，所以默认会跟踪一个版本号。&lt;/p>
&lt;p>正确的做法是，当 submodule 更新后，父仓库中 submodule 的版本号会产生一个修改，在父仓库中 add-commit 这个修改，就可以更新父仓库中引用的 submodule 版本号。&lt;/p>
&lt;p>Ref:&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97">Git-工具 - 子模块&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://juejin.im/post/6844903572950401038">Git 子模块：git submodule&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>如何撤销本地 commit&lt;/strong>&lt;/p>
&lt;p>有时候本地 add 了一写 diff，随手 commit 了，接着又有些 diff 可以共用这个 commit，就想撤销刚刚的 commit，把所有的 diff 合并在一起作为一次 commit。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># for more info, type git reset -h&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git reset --soft &amp;lt;commit_id&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>修改已提交的 commit message&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># commit_id 至少比要修改的那个 commit 早一个版本&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git rebase -i &amp;lt;commit_id&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 列出 rebase 的 commit 列表，不包含 &amp;lt;commit id&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ git rebase -i &amp;lt;commit id&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 最近 3 条&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ git rebase -i HEAD~3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 本地仓库没 push 到远程仓库的 commit 信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ git rebase -i
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># vi 下，找到需要修改的 commit 记录，`pick` 修改为 `edit` 或 `e`，`:wq` 保存退出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 或者较新版本的 `reword`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 重复执行如下命令直到完成&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ git commit --amend --message&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;modify message by daodaotest&amp;#34;&lt;/span> --author&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;jiangliheng &amp;lt;jiang_liheng@163.com&amp;gt;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ git rebase --continue
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 中间也可跳过或退出 rebase 模式&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ git rebase --skip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ git rebase --abort
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 如果只是更改 last commit&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git commit --amend
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Cf. &lt;a href="https://docs.github.com/zh/pull-requests/committing-changes-to-your-project/creating-and-editing-commits/changing-a-commit-message">github doc&lt;/a>.&lt;/p>
&lt;p>&lt;strong>Git rebase&lt;/strong>&lt;/p>
&lt;p>Cf. &lt;a href="https://www.atlassian.com/git/tutorials/rewriting-history/git-rebase">https://www.atlassian.com/git/tutorials/rewriting-history/git-rebase&lt;/a>&lt;/p>
&lt;p>&lt;code>rebase&lt;/code>和&lt;code>merge&lt;/code>都是将另一分支的提交（commit）集成到当前分支的方法。而 merge 会保留两条分支的所有 commit，然后解决冲突，然后形成一个 merge commit，从 git log 上来看，原本线性的提交历史分了叉，然后又合了并。而 rebase 则是基于当前分支的某次提交去重现另一个分支，rebase 之后依然能够保留提交历史的线性状态。&lt;/p>
&lt;pre tabindex="0">&lt;code>a---b---c---d---e (master)
\
`--A---B---C (dev)
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>From a content perspective, rebasing is changing the base of your branch from one commit to another making it appear as if you&amp;rsquo;d created your branch from a different commit. Internally, Git accomplishes this by creating new commits and applying them to the specified base. It&amp;rsquo;s very important to understand that even though the branch looks the same, it&amp;rsquo;s composed of entirely new commits.&lt;/p>
&lt;p>The primary reason for rebasing is to maintain a linear project history. For example, consi der a situation where the main branch has progressed since you started working on a feature branch. You want to get the latest updates to the main branch in your feature branch, but you want to keep your branch&amp;rsquo;s history clean so it appears as if you&amp;rsquo;ve been working off the latest main branch.&lt;/p>
&lt;p>You have two options for integrating your feature into the main branch: merging directly or rebasing and then merging. The former option results in a 3-way merge and a merge commit, while the latter results in a fast-forward merge and a perfectly linear history. The following diagram demonstrates how rebasing onto the main branch facilitates a fast-forward merge.&lt;/p>
&lt;p>Rebasing is a common way to integrate upstream changes into your local repository. Pulling in upstream changes with Git merge results in a superfluous merge commit every time you want to see how the project has progressed. On the other hand, rebasing is like saying, “I want to base my changes on what everybody has already done.”&lt;/p>
&lt;/blockquote>
&lt;p>注：写这个的时候，我自己对 rebase 的理解也很模糊。&lt;/p>
&lt;p>任何时候不清楚的时候请终止 rebase:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git rebase --abort
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>反复操练几次，git 有友好的提示信息。&lt;/p>
&lt;p>&lt;strong>撤销上次rebase&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 先使用 reflog查看分支变动历史&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ git reflog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 选中rebase前的commit id (hash)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ git reset --hard &amp;lt;commit_id&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考：&lt;a href="https://juejin.cn/s/git%20%E6%92%A4%E9%94%80rebase">此处&lt;/a>。&lt;/p>
&lt;hr>
&lt;h2 id="command-g">Command &lt;code>g++&lt;/code>&lt;/h2>
&lt;p>自定义包含路径&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>g++ main.cpp -I/usr/local/include
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>自定义链接静态或动态库&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>g++ main.cpp -L/path/to/lib_file
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>g++ main.cpp -L/usr/lib64 -lcurl -lssl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>上面第二个命令链接了&lt;code>/usr/lib64/&lt;/code>目录下的&lt;code>libcurl.so&lt;/code>和&lt;code>libssl.so&lt;/code>两个动态库文件。静态库也是同样链接。说起来静态库，想起了最近折腾的一个东西，你可能会想把多个静态库合成一个静态库，想当然的直接用&lt;code>ar&lt;/code>合并，但是不行，必须要把两个静态库全解压出来，再合并所有的 object file. 参见：&lt;a href="https://www.cnblogs.com/fnlingnzb-learner/p/8127456.html">here&lt;/a>&lt;/p>
&lt;p>生成机器码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>g++ main.cpp -c
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>生成汇编代码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>g++ main.cpp -S
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>仅预编译&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>g++ main.cpp -E &amp;gt; main.i
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="aria2c">Aria2c&lt;/h2>
&lt;p>&lt;a href="https://aria2.github.io/">aria2c&lt;/a> 是个好东西。支持连接，磁力，种子下载。轻量且强大，可直接使用，也可作为服务端，配合 WebUI 使用。&lt;/p>
&lt;ul>
&lt;li>配置：参考 &lt;a href="https://binux.blog/2012/12/aria2-examples/">aria2 配置示例&lt;/a>&lt;/li>
&lt;li>WebUI:
&lt;ul>
&lt;li>&lt;a href="http://binux.github.io/yaaw/demo/">YAAW&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ziahamza.github.io/webui-aria2/#">ziahamza&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://ariang.mayswind.net/latest/">AriaNg&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Note: jsonrpc 地址格式为 &lt;code>http://token:&amp;lt;rpc-secret&amp;gt;@hostname:port/jsonrpc&lt;/code>
令牌填写自己设置的 &lt;code>rpc-secret&lt;/code>
&lt;img src="https://i.loli.net/2018/12/28/5c263327c4214.png" alt="">&lt;/p>
&lt;p>&lt;code>xxx&lt;/code> 替换为自己设置的 &lt;code>rpc-secret&lt;/code>
&lt;img src="https://i.loli.net/2018/12/28/5c263398854c3.png" alt="">&lt;/p>
&lt;h2 id="mpv">MPV&lt;/h2>
&lt;p>&lt;a href="https://mpv.io">MPV&lt;/a> 是一个轻量、简约、跨平台的播放器。据我自己体验，在 Linux 下比 mplayer 播放效果要好，mplayer 倍速会掉帧，而 mpv 则不太明显。&lt;/p>
&lt;h2 id="html">HTML&lt;/h2>
&lt;p>给网页添加 BGM。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#e06c75">embed&lt;/span> &lt;span style="color:#e06c75">src&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;bgm.mp3&amp;#34;&lt;/span> &lt;span style="color:#e06c75">autostart&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#e06c75">loop&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#e06c75">width&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;300&amp;#34;&lt;/span> &lt;span style="color:#e06c75">height&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;20&amp;#34;&lt;/span> &lt;span style="color:#e06c75">hidden&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;true&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>又，添加可以控制播放的音乐。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#e06c75">audio&lt;/span> &lt;span style="color:#e06c75">autoplay&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;autoplay&amp;#34;&lt;/span> &lt;span style="color:#e06c75">controls&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;controls&amp;#34;&lt;/span> &lt;span style="color:#e06c75">loop&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;loop&amp;#34;&lt;/span> &lt;span style="color:#e06c75">preload&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;auto&amp;#34;&lt;/span> &lt;span style="color:#e06c75">src&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;music.mp3&amp;#34;&lt;/span>&amp;gt;Your browser doesn&amp;#39;t support H5 audio flag!&amp;lt;/&lt;span style="color:#e06c75">audio&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="使用xrandr设置多屏显示">使用&lt;code>xrandr&lt;/code>设置多屏显示&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ xrandr
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Screen 0: minimum &lt;span style="color:#d19a66">320&lt;/span> x 200, current &lt;span style="color:#d19a66">1920&lt;/span> x 1080, maximum &lt;span style="color:#d19a66">8192&lt;/span> x &lt;span style="color:#d19a66">8192&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>eDP-1 connected primary 1920x1080+0+0 &lt;span style="color:#56b6c2">(&lt;/span>normal left inverted right x axis y axis&lt;span style="color:#56b6c2">)&lt;/span> 294mm x 165mm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1920x1080 59.93*+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1680x1050 59.95 59.88
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1400x1050 59.98
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1600x900 59.99 59.94 59.95 59.82
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1280x1024 60.02
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1400x900 59.96 59.88
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1280x960 60.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1440x810 60.00 59.97
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1368x768 59.88 59.85
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1280x800 59.99 59.97 59.81 59.91
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1280x720 60.00 59.99 59.86 59.74
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1024x768 60.04 60.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 960x720 60.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 928x696 60.05
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 896x672 60.01
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1024x576 59.95 59.96 59.90 59.82
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 960x600 59.93 60.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 960x540 59.96 59.99 59.63 59.82
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 800x600 60.00 60.32 56.25
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 840x525 60.01 59.88
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 864x486 59.92 59.57
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 700x525 59.98
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 800x450 59.95 59.82
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 640x512 60.02
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 700x450 59.96 59.88
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 640x480 60.00 59.94
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 720x405 59.51 58.99
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 684x384 59.88 59.85
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 640x400 59.88 59.98
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 640x360 59.86 59.83 59.84 59.32
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 512x384 60.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 512x288 60.00 59.92
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 480x270 59.63 59.82
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 400x300 60.32 56.34
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 432x243 59.92 59.57
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 320x240 60.05
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 360x202 59.51 59.13
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 320x180 59.84 59.32
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DP-1 disconnected &lt;span style="color:#56b6c2">(&lt;/span>normal left inverted right x axis y axis&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>HDMI-1 disconnected &lt;span style="color:#56b6c2">(&lt;/span>normal left inverted right x axis y axis&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>HDMI-2 connected 1920x1080+0+0 &lt;span style="color:#56b6c2">(&lt;/span>normal left inverted right x axis y axis&lt;span style="color:#56b6c2">)&lt;/span> 527mm x 296mm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1920x1080 60.00*+ 60.00 50.00 59.94
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1920x1080i 60.00 60.00 50.00 59.94
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1600x1200 60.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1280x1024 75.02 60.02
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1152x864 75.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1280x720 60.00 60.00 50.00 59.94
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1024x768 75.03 60.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 800x600 75.00 60.32
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 720x576 50.00 50.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 720x576i 50.00 50.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 720x480 60.00 60.00 59.94 59.94 59.94
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 720x480i 60.00 60.00 59.94 59.94
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 640x480 75.00 60.00 59.94 59.94
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 720x400 70.08
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>观察输出可知，连接了两个显示器 (eDP-1, HDMI-2)，其中 eDP-1 是主显示器。如果第二块屏幕无显示，执行下面的命令。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>xrandr --output HDMI-2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>又，指定分辨率为 1920x1080，&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>xrandr --output HDMI-2 --mode 1920x1080
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>又，设置为右侧扩展屏，即光标向右可移动至第二块屏，&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>xrandr --output HDMI-2 --right-of eDP-1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>又，连接上第二块屏，想关掉内置显示屏，（警告：不要随便关掉内置屏）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>xrandr --output eDP-1 --off
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>又，开启内置屏。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>xrandr --output eDP-1 --auto
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>某些情况下会无法检测显示器的最大分辨率，此时需要手动设置显示器的分辨率。参考&lt;a href="https://wiki.archlinuxcn.org/zh-hans/Xrandr#%E6%B7%BB%E5%8A%A0%E6%9C%AA%E8%A2%AB%E6%A3%80%E6%B5%8B%E5%88%B0%E7%9A%84%E6%9C%89%E6%95%88%E5%88%86%E8%BE%A8%E7%8E%87">此处&lt;/a>。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 获取参数值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cvt &lt;span style="color:#d19a66">2560&lt;/span> &lt;span style="color:#d19a66">1440&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 2560x1440 59.96 Hz (CVT 3.69M9) hsync: 89.52 kHz; pclk: 312.25 MHz&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Modeline &lt;span style="color:#98c379">&amp;#34;2560x1440_60.00&amp;#34;&lt;/span> 312.25 &lt;span style="color:#d19a66">2560&lt;/span> &lt;span style="color:#d19a66">2752&lt;/span> &lt;span style="color:#d19a66">3024&lt;/span> &lt;span style="color:#d19a66">3488&lt;/span> &lt;span style="color:#d19a66">1440&lt;/span> &lt;span style="color:#d19a66">1443&lt;/span> &lt;span style="color:#d19a66">1448&lt;/span> &lt;span style="color:#d19a66">1493&lt;/span> -hsync +vsync
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 新建 mode&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ xrandr --newmode &lt;span style="color:#98c379">&amp;#34;2560x1440_60.00&amp;#34;&lt;/span> 312.25 &lt;span style="color:#d19a66">2560&lt;/span> &lt;span style="color:#d19a66">2752&lt;/span> &lt;span style="color:#d19a66">3024&lt;/span> &lt;span style="color:#d19a66">3488&lt;/span> &lt;span style="color:#d19a66">1440&lt;/span> &lt;span style="color:#d19a66">1443&lt;/span> &lt;span style="color:#d19a66">1448&lt;/span> &lt;span style="color:#d19a66">1493&lt;/span> -hsync +vsync
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 为指定显示设备 add mode&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ xrandr --addmode HDMI2 &lt;span style="color:#98c379">&amp;#34;2560x1440_60.00&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># 指定显示器分辨率&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ xrandr --output HDMI2 --mode &lt;span style="color:#98c379">&amp;#34;2560x1440_60.00&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>如果显示屏分辨率更改成功但窗口显示不完整（即只有左上角以指定分辨率显示，其他部分空白），可以尝试关闭内置显示屏，此时显示器应该能以完整窗口显示内容。&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="网络">网络&lt;/h2>
&lt;p>查看被监听端口&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>netstat -tulpn | grep LISTEN
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="htop-基本操作">Htop 基本操作&lt;/h2>
&lt;p>Htop 类似于 top，但比 top 更现代化，支持鼠标操作，支持颜色主题。在命令行键入 htop，会呈现如下界面。(图片来源：https://blog.csdn.net/freeking101/article/details/79173903)&lt;/p>
&lt;p>&lt;img src="https://example.com/img/htop.jpg" alt="">&lt;/p>
&lt;p>平均负载区的三个数字分别表示过去 5、10、15 分钟系统的平均负载。进程区每一列的意义分别是：&lt;/p>
&lt;ul>
&lt;li>PID: 进程号&lt;/li>
&lt;li>USER: 进程所有者的用户名&lt;/li>
&lt;li>PRI: 优先级别&lt;/li>
&lt;li>NI: NICE 值（优先级别数值），越小优先级越高&lt;/li>
&lt;li>VIRT: 虚拟内存&lt;/li>
&lt;li>RES: 物理内存&lt;/li>
&lt;li>SHR: 共享内存&lt;/li>
&lt;li>S: 进程状态（S[leep], R[unning], Z[ombie], N 表示优先级为负数）&lt;/li>
&lt;li>CPU%: 该进程占用的 CPU 使用率&lt;/li>
&lt;li>MEM%: 该进程占用的物理内存和总内存的百分比&lt;/li>
&lt;li>TIME+: 该进程启动后占用的 CPU 时间&lt;/li>
&lt;li>Command: 该进程的启动命令&lt;/li>
&lt;/ul>
&lt;p>常用快捷键可在 htop 界面按？显示。&lt;/p>
&lt;ul>
&lt;li>H: 显示/隐藏用户子线程&lt;/li>
&lt;li>Space: 标记进程&lt;/li>
&lt;li>k: 杀死已标记进程&lt;/li>
&lt;/ul>
&lt;h1 id="reference">Reference&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://kxp555.coding.me/2017/11/23/Linux%E4%B8%8B%E8%A7%86%E9%A2%91%E8%BD%ACgif/">linux 下视频转 gif&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.maketecheasier.com/run-bash-commands-background-linux/">Running Bash Commands in the Background the Right Way [Linux]&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a href="https://gist.github.com/heiswayi/350e2afda8cece810c0f6116dadbe651">https://gist.github.com/heiswayi/350e2afda8cece810c0f6116dadbe651&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div>
- https://example.com/posts/tricks/ -</description></item><item><title>Typography - Test for features</title><link>https://example.com/posts/post-5/</link><pubDate>Sun, 18 Mar 2018 12:13:38 +0530</pubDate><guid>https://example.com/posts/post-5/</guid><description>Yukynnの窝 https://example.com/posts/post-5/ -&lt;p>Lid est laborum et dolorum fuga. Et harum quidem rerum facilis est et expeditasi distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihilse impedit quo minus id quod amets untra dolor amet sad. Sed ut perspser iciatis unde omnis iste natus error sit voluptatem accusantium doloremque laste. Dolores sadips ipsums sits.&lt;/p>
&lt;h1 id="heading-1">Heading 1&lt;/h1>
&lt;p>Lid est laborum et dolorum fuga. Et harum quidem rerum facilis est et expeditasi distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihilse impedit quo minus id quod amets untra dolor amet sad. Sed ut perspser iciatis unde omnis iste natus error sit voluptatem accusantium doloremque laste. Dolores sadips ipsums sits.&lt;/p>
&lt;h2 id="heading-2">Heading 2&lt;/h2>
&lt;p>Lid est laborum et dolorum fuga. Et harum quidem rerum facilis est et expeditasi distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihilse impedit quo minus id quod amets untra dolor amet sad. Sed ut perspser iciatis unde omnis iste natus error sit voluptatem accusantium doloremque laste. Dolores sadips ipsums sits.&lt;/p>
&lt;h3 id="heading-3">Heading 3&lt;/h3>
&lt;p>Lid est laborum et dolorum fuga. Et harum quidem rerum facilis est et expeditasi distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihilse impedit quo minus id quod amets untra dolor amet sad. Sed ut perspser iciatis unde omnis iste natus error sit voluptatem accusantium doloremque laste. Dolores sadips ipsums sits.&lt;/p>
&lt;h4 id="heading-4">Heading 4&lt;/h4>
&lt;p>Lid est laborum et dolorum fuga. Et harum quidem rerum facilis est et expeditasi distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihilse impedit quo minus id quod amets untra dolor amet sad. Sed ut perspser iciatis unde omnis iste natus error sit voluptatem accusantium doloremque laste. Dolores sadips ipsums sits.&lt;/p>
&lt;h5 id="heading-5">Heading 5&lt;/h5>
&lt;p>Lid est laborum et dolorum fuga. Et harum quidem rerum facilis est et expeditasi distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihilse impedit quo minus id quod amets untra dolor amet sad. Sed ut perspser iciatis unde omnis iste natus error sit voluptatem accusantium doloremque laste. Dolores sadips ipsums sits.&lt;/p>
&lt;h6 id="heading-6">Heading 6&lt;/h6>
&lt;p>Lid est laborum et dolorum fuga. Et harum quidem rerum facilis est et expeditasi distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihilse impedit quo minus id quod amets untra dolor amet sad. Sed ut perspser iciatis unde omnis iste natus error sit voluptatem accusantium doloremque laste. Dolores sadips ipsums sits.&lt;/p>
&lt;h2 id="typography">Typography&lt;/h2>
&lt;p>Lid est laborum et dolorum fuga, This is &lt;a href="http://example.com/" title="Title">an example&lt;/a> inline link. Et harum quidem rerum facilis, &lt;strong>This is bold&lt;/strong> and &lt;em>emphasis&lt;/em> cumque nihilse impedit quo minus id quod amets untra dolor amet sad. While this is &lt;code>code block()&lt;/code> and following is a &lt;code>pre&lt;/code> tag&lt;/p>
&lt;pre>&lt;code>print 'this is pre tag'
&lt;/code>&lt;/pre>
&lt;p>Following is the syntax highlighted code block&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">func&lt;/span> &lt;span style="color:#61afef;font-weight:bold">getCookie&lt;/span>(&lt;span style="color:#e06c75">name&lt;/span> &lt;span style="color:#e5c07b">string&lt;/span>, &lt;span style="color:#e06c75">r&lt;/span> &lt;span style="color:#c678dd">interface&lt;/span>{}) (&lt;span style="color:#56b6c2">*&lt;/span>&lt;span style="color:#e06c75">http&lt;/span>.&lt;span style="color:#e06c75">Cookie&lt;/span>, &lt;span style="color:#e5c07b">error&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">rd&lt;/span> &lt;span style="color:#56b6c2">:=&lt;/span> &lt;span style="color:#e06c75">r&lt;/span>.(&lt;span style="color:#56b6c2">*&lt;/span>&lt;span style="color:#e06c75">http&lt;/span>.&lt;span style="color:#e06c75">Request&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">cookie&lt;/span>, &lt;span style="color:#e06c75">err&lt;/span> &lt;span style="color:#56b6c2">:=&lt;/span> &lt;span style="color:#e06c75">rd&lt;/span>.&lt;span style="color:#61afef;font-weight:bold">Cookie&lt;/span>(&lt;span style="color:#e06c75">name&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#e06c75">err&lt;/span> &lt;span style="color:#56b6c2">!=&lt;/span> &lt;span style="color:#e5c07b">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#e5c07b">nil&lt;/span>, &lt;span style="color:#e06c75">err&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#e06c75">cookie&lt;/span>, &lt;span style="color:#e5c07b">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">func&lt;/span> &lt;span style="color:#61afef;font-weight:bold">setCookie&lt;/span>(&lt;span style="color:#e06c75">cookie&lt;/span> &lt;span style="color:#56b6c2">*&lt;/span>&lt;span style="color:#e06c75">http&lt;/span>.&lt;span style="color:#e06c75">Cookie&lt;/span>, &lt;span style="color:#e06c75">w&lt;/span> &lt;span style="color:#c678dd">interface&lt;/span>{}) &lt;span style="color:#e5c07b">error&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e">// Get write interface registered using `Acquire` method in handlers.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span> &lt;span style="color:#e06c75">wr&lt;/span> &lt;span style="color:#56b6c2">:=&lt;/span> &lt;span style="color:#e06c75">w&lt;/span>.(&lt;span style="color:#e06c75">http&lt;/span>.&lt;span style="color:#e06c75">ResponseWriter&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">http&lt;/span>.&lt;span style="color:#61afef;font-weight:bold">SetCookie&lt;/span>(&lt;span style="color:#e06c75">wr&lt;/span>, &lt;span style="color:#e06c75">cookie&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#e5c07b">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is blockquote, Will make it &lt;em>better now&lt;/em>&lt;/p>
&lt;blockquote>
&lt;p>&amp;lsquo;I want to do with you what spring does with the cherry trees.&amp;rsquo; &lt;!-- raw HTML omitted -->cited ~Pablo Neruda&lt;!-- raw HTML omitted -->*&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Et harum quidem &lt;em>rerum facilis&lt;/em> est et expeditasi distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihilse impedit&lt;/p>
&lt;/blockquote>
&lt;p>Unordered list&lt;/p>
&lt;ul>
&lt;li>Red&lt;/li>
&lt;li>Green&lt;/li>
&lt;li>Blue&lt;/li>
&lt;/ul>
&lt;p>Ordered list&lt;/p>
&lt;ol>
&lt;li>Red&lt;/li>
&lt;li>Green&lt;/li>
&lt;li>Blue&lt;/li>
&lt;/ol>
- https://example.com/posts/post-5/ -</description></item><item><title>(No comment) When You Have Too Much to Do</title><link>https://example.com/posts/post-1/</link><pubDate>Sun, 18 Mar 2018 02:01:58 +0530</pubDate><guid>https://example.com/posts/post-1/</guid><description>Yukynnの窝 https://example.com/posts/post-1/ -&lt;p>You have a to-do list that scrolls on for days. You are managing multiple projects, getting lots of email and messages on different messaging systems, managing finances and personal health habits and so much more.&lt;/p>
&lt;p>It all keeps piling up, and it can feel overwhelming.&lt;/p>
&lt;p>How do you keep up with it all? How do you find focus and peace and get stuff accomplished when you have too much on your plate?&lt;/p>
&lt;p>In this primer, I’ll look at some key strategies and tactics for taking on an overloaded life with an open heart, lots of energy, and a smile on your face.&lt;/p>
&lt;h2 id="the-first-step-triage">The First Step: Triage&lt;/h2>
&lt;p>Whether you’re just starting your day, or you’re in the middle of the chaos and just need to find some sanity … the first step is to get into triage mode.&lt;/p>
&lt;p>Triage, as you probably know, is sorting through the chaos to prioritize: what needs to be done now, what needs to be done today, what needs to be done this week, and what can wait? You’re looking at urgency, but also what’s meaningful and important.&lt;/p>
&lt;p>Here’s what you might do:&lt;/p>
&lt;ul>
&lt;li>Pick out the things that need to be done today. Start a Short List for things you’re going to do today. That might be important tasks for big projects, urgent tasks that could result in damage if you don’t act, smaller admin tasks that you really should take care of today, and responding to important messages. I would recommend being ruthless and cutting out as much as you can, having just 5 things on your plate if that’s at all possible. Not everything needs to be done today, and not every email needs to be responded to.&lt;/li>
&lt;li>Push some things to tomorrow and the rest of the week. If you have deadlines that can be pushed back (or renegotiated), do that. Spread the work out over the week, even into next week. What needs to be done tomorrow? What can wait a day or two longer?&lt;/li>
&lt;li>Eliminate what you can. That might mean just not replying to some messages that aren’t that important and don’t really require a reply. It might mean telling some people that you can’t take on this project after all, or that you need to get out of the commitment that you said you’d do. Yes, this is uncomfortable. For now, just put them on a list called, “To Not Do,” and plan to figure out how to get out of them later.&lt;/li>
&lt;/ul>
&lt;p>OK, you have some breathing room and a manageable list now! Let’s shrink that down even further and just pick one thing.&lt;/p>
&lt;h2 id="next-focus-on-one-thing">Next: Focus on One Thing&lt;/h2>
&lt;p>With a lot on your plate, it’s hard to pick one thing to focus on. But that’s exactly what I’m going to ask you to do.&lt;/p>
&lt;p>Pick one thing, and give it your focus. Yes, there are a lot of other things you can focus on. Yes, they’re stressing you out and making it hard to focus. But think about it this way: if you allow it all to be in your head all the time, that will always be your mode of being. You’ll always be thinking about everything, stressing out about it all, with a frazzled mind … unless you start shifting.&lt;/p>
&lt;p>The shift:&lt;/p>
&lt;ul>
&lt;li>Pick something to focus on. Look at the triaged list from the first section … if you have 5-6 things on this Short List, you can assess whether there’s any super urgent, time-sensitive things you need to take care of. If there are, pick one of them. If not, pick the most important one — probably the one you have been putting off doing.&lt;/li>
&lt;li>Clear everything else away. Just for a little bit. Close all browser tabs, turn off notifications, close open applications, put your phone away.&lt;/li>
&lt;li>Put that one task before you, and allow yourself to be with it completely. Pour yourself into it. Think of it as a practice, of letting go (of everything else), of focus, of radical simplicity.&lt;/li>
&lt;/ul>
&lt;p>When you’re done (or after 15-20 minutes have gone by at least), you can switch to something else. But don’t allow yourself to switch until then.&lt;/p>
&lt;p>By closing off all exits, by choosing one thing, by giving yourself completely to that thing … you’re now in a different mode that isn’t so stressful or spread thin. You’ve started a shift that will lead to focus and sanity.&lt;/p>
&lt;h2 id="third-schedule-time-to-simplify">Third: Schedule Time to Simplify&lt;/h2>
&lt;p>Remember the To Not Do list above? Schedule some time this week to start reducing your projects, saying no to people, getting out of commitments, crossing stuff off your task list … so that you can have some sanity back.&lt;/p>
&lt;p>There are lots of little things that you’ve said “yes” to that you probably shouldn’t have. That’s why you’re overloaded. Protect your more important work, and your time off, and your peace of mind, by saying “no” to things that aren’t as important.&lt;/p>
&lt;p>Schedule the time to simplify — you don’t have to do it today, but sometime soon — and you can then not have to worry about the things on your To Not Do list until then.&lt;/p>
&lt;h2 id="fourth-practice-mindful-focus">Fourth: Practice Mindful Focus&lt;/h2>
&lt;p>Go through the rest of the day with an attitude of “mindful focus.” That means that you are doing one thing at a time, being as present as you can, switching as little as you can.&lt;/p>
&lt;p>Think of it as a settling of the mind. A new mode of being. A mindfulness practice (which means you won’t be perfect at it).&lt;/p>
&lt;p>As you practice mindful focus, you’ll learn to practice doing things with an open heart, with curiosity and gratitude, and even joy. Try these one at a time as you get to do each task on your Short List.&lt;/p>
&lt;p>You’ll find that you’re not so overloaded, but that each task is just perfect for that moment. And that’s a completely new relationship with the work that you do, and a new relationship with life.&lt;/p>
- https://example.com/posts/post-1/ -</description></item><item><title>Chapter VI: Esmeralda</title><link>https://example.com/posts/chapter-6/</link><pubDate>Fri, 14 Apr 2017 11:25:05 -0400</pubDate><guid>https://example.com/posts/chapter-6/</guid><description>Yukynnの窝 https://example.com/posts/chapter-6/ -&lt;p>We are delighted to be able to inform the reader, that during the whole of
this scene, Gringoire and his piece had stood firm. His actors, spurred on
by him, had not ceased to spout his comedy, and he had not ceased to
listen to it. He had made up his mind about the tumult, and was determined
to proceed to the end, not giving up the hope of a return of attention on
the part of the public. This gleam of hope acquired fresh life, when he
saw Quasimodo, Coppenole, and the deafening escort of the pope of the
procession of fools quit the hall amid great uproar. The throng rushed
eagerly after them. “Good,” he said to himself, “there go all the
mischief-makers.” Unfortunately, all the mischief-makers constituted the
entire audience. In the twinkling of an eye, the grand hall was empty.&lt;/p>
&lt;p>To tell the truth, a few spectators still remained, some scattered, others
in groups around the pillars, women, old men, or children, who had had
enough of the uproar and tumult. Some scholars were still perched astride
of the window-sills, engaged in gazing into the Place.&lt;/p>
&lt;p>“Well,” thought Gringoire, “here are still as many as are required to hear
the end of my mystery. They are few in number, but it is a choice
audience, a lettered audience.”&lt;/p>
&lt;p>An instant later, a symphony which had been intended to produce the
greatest effect on the arrival of the Virgin, was lacking. Gringoire
perceived that his music had been carried off by the procession of the
Pope of the Fools. “Skip it,” said he, stoically.&lt;/p>
&lt;p>He approached a group of bourgeois, who seemed to him to be discussing his
piece. This is the fragment of conversation which he caught,—&lt;/p>
&lt;p>“You know, Master Cheneteau, the Hôtel de Navarre, which belonged to
Monsieur de Nemours?”&lt;/p>
&lt;p>“Yes, opposite the Chapelle de Braque.”&lt;/p>
&lt;p>“Well, the treasury has just let it to Guillaume Alixandre, historian, for
six hivres, eight sols, parisian, a year.”&lt;/p>
&lt;p>“How rents are going up!”&lt;/p>
&lt;p>“Come,” said Gringoire to himself, with a sigh, “the others are
listening.”&lt;/p>
&lt;p>“Comrades,” suddenly shouted one of the young scamps from the window, “La
Esmeralda! La Esmeralda in the Place!”&lt;/p>
&lt;p>This word produced a magical effect. Every one who was left in the hall
flew to the windows, climbing the walls in order to see, and repeating,
“La Esmeralda! La Esmeralda?” At the same time, a great sound of applause
was heard from without.&lt;/p>
&lt;p>“What’s the meaning of this, of the Esmeralda?” said Gringoire, wringing
his hands in despair. “Ah, good heavens! it seems to be the turn of the
windows now.”&lt;/p>
&lt;p>He returned towards the marble table, and saw that the representation had
been interrupted. It was precisely at the instant when Jupiter should have
appeared with his thunder. But Jupiter was standing motionless at the foot
of the stage.&lt;/p>
&lt;p>“Michel Giborne!” cried the irritated poet, “what are you doing there? Is
that your part? Come up!”&lt;/p>
&lt;p>“Alas!” said Jupiter, “a scholar has just seized the ladder.”&lt;/p>
&lt;p>Gringoire looked. It was but too true. All communication between his plot
and its solution was intercepted.&lt;/p>
&lt;p>“The rascal,” he murmured. “And why did he take that ladder?”&lt;/p>
&lt;p>“In order to go and see the Esmeralda,” replied Jupiter piteously. “He
said, ‘Come, here’s a ladder that’s of no use!’ and he took it.”&lt;/p>
&lt;p>This was the last blow. Gringoire received it with resignation.&lt;/p>
&lt;p>“May the devil fly away with you!” he said to the comedian, “and if I get
my pay, you shall receive yours.”&lt;/p>
&lt;p>Then he beat a retreat, with drooping head, but the last in the field,
like a general who has fought well.&lt;/p>
&lt;p>And as he descended the winding stairs of the courts: “A fine rabble of
asses and dolts these Parisians!” he muttered between his teeth; “they
come to hear a mystery and don’t listen to it at all! They are engrossed
by every one, by Chopin Trouillefou, by the cardinal, by Coppenole, by
Quasimodo, by the devil! but by Madame the Virgin Mary, not at all. If I
had known, I’d have given you Virgin Mary; you ninnies! And I! to come to
see faces and behold only backs! to be a poet, and to reap the success of
an apothecary! It is true that Homerus begged through the Greek towns, and
that Naso died in exile among the Muscovites. But may the devil flay me if
I understand what they mean with their Esmeralda! What is that word, in
the first place?—‘tis Egyptian!”&lt;/p>
- https://example.com/posts/chapter-6/ -</description></item><item><title>Chapter I: The Grand Hall</title><link>https://example.com/posts/chapter-1/</link><pubDate>Sun, 09 Apr 2017 10:58:08 -0400</pubDate><guid>https://example.com/posts/chapter-1/</guid><description>Yukynnの窝 https://example.com/posts/chapter-1/ -&lt;p>Three hundred and forty-eight years, six months, and nineteen days ago
to-day, the Parisians awoke to the sound of all the bells in the triple
circuit of the city, the university, and the town ringing a full peal.&lt;/p>
&lt;p>The sixth of January, 1482, is not, however, a day of which history has
preserved the memory. There was nothing notable in the event which thus
set the bells and the bourgeois of Paris in a ferment from early morning.
It was neither an assault by the Picards nor the Burgundians, nor a hunt
led along in procession, nor a revolt of scholars in the town of Laas, nor
an entry of “our much dread lord, monsieur the king,” nor even a pretty
hanging of male and female thieves by the courts of Paris. Neither was it
the arrival, so frequent in the fifteenth century, of some plumed and
bedizened embassy. It was barely two days since the last cavalcade of that
nature, that of the Flemish ambassadors charged with concluding the
marriage between the dauphin and Marguerite of Flanders, had made its
entry into Paris, to the great annoyance of M. le Cardinal de Bourbon,
who, for the sake of pleasing the king, had been obliged to assume an
amiable mien towards this whole rustic rabble of Flemish burgomasters, and
to regale them at his Hôtel de Bourbon, with a very “pretty morality,
allegorical satire, and farce,” while a driving rain drenched the
magnificent tapestries at his door.&lt;/p>
&lt;p>What put the “whole population of Paris in commotion,” as Jehan de Troyes
expresses it, on the sixth of January, was the double solemnity, united
from time immemorial, of the Epiphany and the Feast of Fools.&lt;/p>
&lt;p>On that day, there was to be a bonfire on the Place de Grève, a maypole at
the Chapelle de Braque, and a mystery at the Palais de Justice. It had
been cried, to the sound of the trumpet, the preceding evening at all the
cross roads, by the provost’s men, clad in handsome, short, sleeveless
coats of violet camelot, with large white crosses upon their breasts.&lt;/p>
&lt;p>So the crowd of citizens, male and female, having closed their houses and
shops, thronged from every direction, at early morn, towards some one of
the three spots designated.&lt;/p>
&lt;p>Each had made his choice; one, the bonfire; another, the maypole; another,
the mystery play. It must be stated, in honor of the good sense of the
loungers of Paris, that the greater part of this crowd directed their
steps towards the bonfire, which was quite in season, or towards the
mystery play, which was to be presented in the grand hall of the Palais de
Justice (the courts of law), which was well roofed and walled; and that
the curious left the poor, scantily flowered maypole to shiver all alone
beneath the sky of January, in the cemetery of the Chapel of Braque.&lt;/p>
&lt;p>The populace thronged the avenues of the law courts in particular, because
they knew that the Flemish ambassadors, who had arrived two days
previously, intended to be present at the representation of the mystery,
and at the election of the Pope of the Fools, which was also to take place
in the grand hall.&lt;/p>
&lt;p>It was no easy matter on that day, to force one’s way into that grand
hall, although it was then reputed to be the largest covered enclosure in
the world (it is true that Sauval had not yet measured the grand hall of
the Château of Montargis). The palace place, encumbered with people,
offered to the curious gazers at the windows the aspect of a sea; into
which five or six streets, like so many mouths of rivers, discharged every
moment fresh floods of heads. The waves of this crowd, augmented
incessantly, dashed against the angles of the houses which projected here
and there, like so many promontories, into the irregular basin of the
place. In the centre of the lofty Gothic* façade of the palace, the grand
staircase, incessantly ascended and descended by a double current, which,
after parting on the intermediate landing-place, flowed in broad waves
along its lateral slopes,—the grand staircase, I say, trickled
incessantly into the place, like a cascade into a lake. The cries, the
laughter, the trampling of those thousands of feet, produced a great noise
and a great clamor. From time to time, this noise and clamor redoubled;
the current which drove the crowd towards the grand staircase flowed
backwards, became troubled, formed whirlpools. This was produced by the
buffet of an archer, or the horse of one of the provost’s sergeants, which
kicked to restore order; an admirable tradition which the provostship has
bequeathed to the constablery, the constablery to the &lt;em>maréchaussée&lt;/em>,
the &lt;em>maréchaussée&lt;/em> to our &lt;em>gendarmeri&lt;/em> of Paris.&lt;/p>
- https://example.com/posts/chapter-1/ -</description></item></channel></rss>